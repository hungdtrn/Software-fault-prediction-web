{"version":3,"sources":["state/duck/login/actions.js","state/duck/login/types.js","state/utils/token.js","state/duck/login/reducers.js","state/globals/config.js","state/utils/fetch.js","state/duck/login/apis.js","state/duck/login/operations.js","state/duck/login/index.js","views/pages/components/spinner.js","views/pages/components/modal.js","views/pages/components/fileTable.js","views/pages/components/metricTable.js","views/pages/login.js","state/duck/register/reducers.js","state/duck/register/actions.js","state/duck/register/types.js","state/duck/register/apis.js","state/duck/register/operations.js","state/duck/register/index.js","views/pages/register.js","views/pages/home.js","views/pages/algorithm.js","state/duck/user/reducers.js","state/duck/user/types.js","state/duck/user/actions.js","state/duck/user/apis.js","state/duck/user/operations.js","state/duck/user/index.js","views/pages/account.js","state/duck/project/types.js","state/duck/project/reducers.js","state/duck/project/actions.js","state/duck/project/apis.js","state/duck/project/operations.js","state/duck/project/index.js","views/pages/projects.js","views/pages/projectForm.js","views/pages/projectDetail.js","state/duck/file/reducers.js","state/duck/file/types.js","state/duck/file/actions.js","state/duck/file/apis.js","state/duck/file/operations.js","state/duck/file/index.js","state/duck/model/reducers.js","state/duck/model/types.js","state/duck/model/actions.js","state/duck/model/apis.js","state/duck/model/operations.js","state/duck/model/index.js","views/pages/projectFileDetail.js","views/pages/models.js","views/pages/modelDetail.js","views/pages/modelForm.js","views/pages/404.js","views/pages/users.js","views/pages/userDetail.js","routes/index.js","views/enhancers/withAuthentication.js","views/layouts/general.js","views/layouts/backbone.js","views/layouts/user.js","views/layouts/admin.js","state/store.js","serviceWorker.js","index.js","state/sagas.js"],"names":["loginRequest","type","payload","user","remember","loginStart","loginError","errMsg","error","loginSuccess","accessToken","logout","clearError","getToken","token","localStorage","getItem","sessionStorage","parseToken","mainContent","split","JSON","parse","atob","initialState","loading","BASEURL","process","REACT_APP_API_URL","console","log","url","method","body","is_form","options","headers","requestHeaders","stringify","fetch","then","res","status","Promise","resolve","reject","response","parseStatus","json","BASE_JSON","Accept","login","a","username","password","loginSaga","action","put","loginActions","race","call","apis","timeout","delay","CONFIG","result","msg","hasOwnProperty","toString","takeEvery","loginReducer","state","Object","assign","setItem","setToken","removeItem","antIcon","style","fontSize","spin","CustomSpinner","title","this","props","visible","closable","maskClosable","okButtonProps","disabled","cancelButtonProps","indicator","React","Component","CustomModal","handleOk","e","setState","handleCancel","onOk","onCancel","content","FileTable","files","useRouteMatch","path","useParams","fileId","projectId","history","useHistory","replace","bordered","dataSource","renderItem","item","previous","hoverable","onClick","goBack","to","_id","childs","color","theme","name","MetricTable","metrics","header","columns","map","t","column","toUpperCase","width","dataIndex","key","fixed","data","m","id","pop","scroll","x","y","pagination","LoginForm","handleSubmit","preventDefault","form","validateFields","err","values","getFieldDecorator","justify","align","className","span","push","onSubmit","Item","rules","required","message","prefix","placeholder","valuePropName","initialValue","float","href","htmlType","connect","dispatch","Form","create","success","registerRequest","registerStart","registerError","registerSuccess","register","registerSaga","registerActions","registerReducer","RegisterForm","email","firstname","lastname","labelCol","xs","sm","wrapperCol","label","hasFeedback","Password","validator","compareToFirstPassword","offset","gutter","Header","Layout","Sider","Content","HomePage","currentUser","role","initialFindState","users","currentuser","reducer","combineReducers","find","findAllRequest","findAllStart","findAllSuccess","findAllError","findByIdRequest","findByIdStart","findByIdInArray","findByIdSuccess","findByIdError","clearFindError","findAll","findById","userSage","userActions","userReducer","AccountDetail","findError","match","params","value","CREATE_START","CREATE_SUCCESS","CREATE_ERROR","DELETE_SUCCESS","projects","currentProject","initialCreateState","createdProject","initialDeleteState","PROJECTTYPES","filter","delete","project","createRequest","createStart","types","createSuccess","createError","clearCreate","deleteRequest","deleteStart","deleteSuccess","deleteError","clearDelete","deleteById","projectSage","projectActions","projectReducer","ProjectPage","Typography","Title","background","padding","projectRoutes","route","exact","length","makeCardData","r","c","description","github","numRows","cardRows","currentRow","i","ownProps","ProjectForm","handleSuccess","validateGithubLink","rule","callback","RegExp","test","ProjectDetail","startDelete","deleting","stopDelete","currentFile","initialPredictState","updatedFile","predict","file","predictByIdRequest","modelId","predictByIdStart","predictByIdSuccess","predictByIdError","clearPredict","predictById","fileSaga","fileActions","fileReducer","models","currentModel","createdModel","initialDeleteCreate","deletedId","clearFindById","model","deleteByIdRequest","formData","FormData","append","modelSaga","modelActions","modelReducer","Option","Select","FileDetail","clearFileError","clearFindByIdError","clearModelError","clearFindModelError","togglePredicting","predicting","findModelRequest","selectModel","prevProps","prevParams","fileLoading","fileError","modelError","modelLoading","predictLoading","predictError","prevPath","onChange","ModeList","modelRoutes","ModelDetail","file_name","flist","splice","join","ModelForm","addFile","removeFile","accept","beforeUpload","onRemove","fileList","NoMatchPage","AllUserPage","userManagementRoutes","UserDetail","userId","WrappedComponent","generalRoutes","component","Login","Register","Home","userRouters","Project","icon","default","NoMatch","adminRoutes","Model","User","App","Footer","BackboneLayout","siders","collapsed","toggle","pathname","location","defaultKeys","trigger","collapsible","mode","defaultSelectedKeys","margin","minHeight","withRouter","UserLayout","defaultComponent","el","routes","AdminLayout","sagaMiddleware","createSagaMiddleware","Boolean","window","hostname","rootStore","rootReducer","reducers","store","createStore","applyMiddleware","run","loginSagas","registerSagas","projectSaga","userSaga","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee2e789c.chunk.js","sourcesContent":["/* ACTION CREATOR FUNCTIONS\nPut here the functions that return an action object that can be dispatched\nHINT: Always use functions for consistency, don't export plain objects\n*/\n\nimport * as types from './types'\n\nconst loginRequest = ({ user, remember }) => ({\n    type: types.LOGIN_REQUEST,\n    payload: {\n        user,\n        remember\n    }\n})\n\nconst loginStart = () => ({\n    type: types.LOGIN_START\n})\n\nconst loginError = ( errMsg ) => ({\n    type: types.LOGIN_ERROR,\n    payload: {\n        error: errMsg\n    }\n})\n\nconst loginSuccess = ( accessToken, remember ) => ({\n    type: types.LOGIN_SUCCESS,\n    payload: {\n        accessToken,\n        remember\n    }\n})\n\nconst logout = () => ({\n    type: types.LOGOUT\n})\n\nconst clearError = () => ({\n    type: types.LOGIN_CLEAR_ERROR\n})\n\nexport {\n    loginRequest,\n    loginStart,\n    loginError,\n    loginSuccess,\n    logout,\n    clearError\n}","const LOGIN_REQUEST = \"AUTH_LOGIN_REQUEST\";\nconst LOGIN_START = \"AUTH_LOGIN_START\";\nconst LOGIN_SUCCESS = \"AUTH_LOGIN_SUCCESS\";\nconst LOGOUT = \"AUTH_LOGOUT\";\nconst LOGIN_ERROR = \"AUTH_LOGIN_ERROR\";\nconst LOGIN_CLEAR_ERROR = \"AUTH_LOGIN_CLEAR_ERROR\";\n\nexport {\n    LOGIN_REQUEST,\n    LOGIN_START,\n    LOGIN_SUCCESS,\n    LOGOUT,\n    LOGIN_ERROR,\n    LOGIN_CLEAR_ERROR\n}","const setToken = (accessToken, remember) => {\n    if (remember) {\n        localStorage.setItem(\"accessToken\", accessToken)\n    } else {\n        sessionStorage.setItem(\"accessToken\", accessToken)\n    }\n}\n\nconst getToken = () => {\n    let token = localStorage.getItem(\"accessToken\")\n\n    if (!token) token = sessionStorage.getItem(\"accessToken\")\n\n    return token\n}\n\nconst clearToken = () => {\n    localStorage.removeItem(\"accessToken\")\n    sessionStorage.removeItem(\"accessToken\")\n}\n\nconst parseToken = (token) => {\n    const mainContent = token.split(\".\")[1]\n    const user = JSON.parse(atob(mainContent))\n\n    return user\n}\n\nexport {\n    setToken,\n    getToken,\n    parseToken,\n    clearToken,\n}","/* REDUCER(S)\n\nIt's a good practice to define your state shape first.\nBased on the state shape, multiple reducers might be defined in this file, combined and exported into a single reducer function.\n\n*/\n\nimport { login, loginError, loginSuccess } from './actions'\nimport * as LOGINTYPES from './types'\nimport { setToken, clearToken } from '../../utils/token'\n\nlet initialState = {\n    loading: false,\n    accessToken: null,\n    error: null,\n}\n\nconst loginReducer = (state, action) => {\n    switch (action.type) {\n        case LOGINTYPES.LOGIN_START: {\n            return Object.assign({}, state, {\n                loading: true,\n                accessToken: null,\n                error: null\n            })\n        }\n        case LOGINTYPES.LOGIN_SUCCESS: {\n            const { accessToken, remember } = action.payload\n            \n            setToken(accessToken,remember)\n\n            return Object.assign({}, state, {\n                error: null,\n                loading: false,\n                accessToken\n            })\n        }\n\n        case LOGINTYPES.LOGOUT: {\n            clearToken()\n\n            return Object.assign({}, initialState)\n        }\n\n        case LOGINTYPES.LOGIN_ERROR: {\n            const { error } = action.payload\n\n            return Object.assign({}, state, {\n                error,\n                loading: false,\n                accessToken: null\n            })\n        }\n        case LOGINTYPES.LOGIN_CLEAR_ERROR: {\n            return Object.assign({}, state, {\n                error: null\n            })\n        }\n        default:\n            return initialState\n    }\n}\n\nexport {\n    loginReducer\n}","export default {\n    REQUEST_TIMEOUT: 5000\n}","// import isomorphicFetch from \"isomorphic-fetch\";\n\nconst BASEURL = process.env.REACT_APP_API_URL;\nconsole.log(BASEURL)\nexport default (url, method, body, token, is_form) => {\n    const options = {\n        method,\n        headers: requestHeaders(token, is_form),\n        body: method !== \"GET\" ? is_form ? body : JSON.stringify(body) : null,\n    };\n\n    url = BASEURL + url\n    return fetch(url, options)\n        .then(res => parseStatus(res.status, res.json()));\n};\n\nfunction parseStatus(status, res) {\n    return new Promise((resolve, reject) => {\n        if (status >= 200 && status < 300) {\n            res.then(response => resolve(response));\n        } else {\n            res.then(response => reject({ status, response }));\n        }\n    });\n}\n\n\nfunction requestHeaders(token, is_form) {\n    let BASE_JSON = {}\n    if (is_form) {\n        BASE_JSON = {\n        }\n    } else {\n        BASE_JSON = {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        }\n    }\n    if (!token)\n        return {\n            ...BASE_JSON\n        };\n    else {\n        return {\n            ...BASE_JSON,\n            \"Authorization\": \"Bearer \" + token\n        }\n    }\n}\n","import fetch from \"../../utils/fetch\"\n\nasync function login({ username, password }) {\n    return await fetch(\"/auth/login\", \"POST\", {\n        username,\n        password\n    });\n}\n\nexport {\n    login\n}","/* OPERATIONS = REDUX SAGAS\n\nThis file defines the public interface of the duck -- what can be dispatched from components\nSimple operations are just about forwarding an action creator, ex: simpleQuack\nComplex operations involve returning a thunk that dispatches multiple actions in a certain order, ex: complexQuack\n\n*/\n\nimport { call, put, race, delay, takeEvery } from 'redux-saga/effects'\n\nimport * as loginActions from './actions'\nimport * as loginTypes from './types'\nimport { CONFIG } from '../../globals'\nimport * as apis from \"./apis\"\n\nfunction* login(action) { \n    try {\n        yield put(loginActions.loginStart())\n        \n        const { response, timeout } = yield race({\n            response: call(apis.login, action.payload.user),\n            timeout: delay(CONFIG.REQUEST_TIMEOUT)\n        });\n\n        if (timeout) {\n            yield put(loginActions.loginError(\"Timeout\"))\n        } else if(response.result) {\n            yield put(loginActions.loginSuccess(response.result, action.payload.remember))\n        } else {\n            yield put(loginActions.loginError(response.msg))\n        }\n    } catch(err) {\n        if (err.hasOwnProperty(\"response\")) {\n            yield put(loginActions.loginError(err.response.msg))\n        } else {\n            yield put(loginActions.loginError(err.toString()))\n        }\n    }\n}\n\nexport default function* loginSaga() {\n    yield takeEvery(loginTypes.LOGIN_REQUEST, login)\n}\n\nexport {\n    login\n}","/* INDEX FILE\n\nThis file, from a module perspective, behaves as the duck file form the original proposal.\nIt exports as default the reducer function of the duck.\nIt exports as named export the selectors and the operations.\nOptionally it exports the actions and types if they are needed in other ducks.\n\n*/\n\nimport { loginReducer } from './reducers'\n\nimport * as loginSelectors from './selectors'\nimport loginOperations from './operations'\nimport * as loginActions from './actions'\nimport * as loginTypes from './types'\n\nexport {\n    loginSelectors,\n    loginOperations,\n    loginActions,\n    loginTypes\n};\n\nexport default loginReducer;\n","import React from 'react'\nimport { Modal, Button } from 'antd';\nimport PropTypes from 'prop-types'\nimport { Spin, Icon } from 'antd'\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass CustomSpinner extends React.Component {\n    static propTypes = {\n        title: PropTypes.string.isRequired,\n        visible: PropTypes.bool.isRequired\n    }\n\n    render() {\n        \n        return (\n        <div>\n            <Modal\n            title={this.props.title}\n            visible={this.props.visible}\n            closable={false}\n            maskClosable={false}\n            okButtonProps={{ disabled: true }}\n            cancelButtonProps={{ disabled: true }}  \n            >\n                <Spin indicator={antIcon} />\n            </Modal>\n        </div>\n        );\n    }\n}\n\nexport default CustomSpinner\n\n","import React from 'react'\nimport { Modal, Button } from 'antd';\nimport PropTypes from 'prop-types'\n\nclass CustomModal extends React.Component {\n    static propTypes = {\n        title: PropTypes.string.isRequired,\n        handleOk: PropTypes.func.isRequired,\n        handleCancel: PropTypes.func.isRequired,\n        content: PropTypes.any.isRequired,\n        visible: PropTypes.bool.isRequired\n    }\n\n    handleOk = e => {\n        this.props.handleOk()\n        this.setState({\n        visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.props.handleCancel()\n        this.setState({\n        visible: false,\n        });\n    };\n\n    render() {\n        \n        return (\n        <div>\n            <Modal\n            title={this.props.title}\n            visible={this.props.visible}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            >\n                {this.props.content}\n            </Modal>\n        </div>\n        );\n    }\n    }\n\nexport default CustomModal","import React from 'react';\nimport { List, Card, Icon  } from 'antd'\nimport { Link, useRouteMatch, useHistory, useParams } from 'react-router-dom'\n\nconst FileTable = ({ files }) => {\n    const render_icon = (file) => {\n        if (file.childs) return <Icon style={{color: \"#555\"}} type=\"folder\" theme=\"filled\" />\n        else return <Icon type=\"file\" style={{color: \"#555\"}} theme=\"outlined\" />\n    }\n\n    let { path, url } = useRouteMatch()\n    let { projectId, fileId } = useParams()\n    let history = useHistory()\n\n    if (fileId) {\n        url = url.replace(`/${fileId}`, \"\")\n    }\n\n    return (\n        <div>\n                    <List\n                    bordered\n                    dataSource={files}\n                    renderItem={item => {\n                        if (item.previous) {\n                            return (\n                                <Card hoverable onClick={() => history.goBack()}>\n                                    ...\n                                </Card>\n                            )\n                        } else{\n                            return (\n                                <Link to={`${url}/${item._id}`}>\n                                    <Card hoverable>\n                                            {render_icon(item)}  {item.name}\n                                    </Card>\n                                </Link> \n                            )\n                        }\n                    }}>\n                    </List>\n        </div>        \n    )\n}\n\nexport default FileTable","import React from 'react'\nimport { Table } from 'antd'\n\nconst MetricTable = ({ metrics, header }) => {\n    const keyNames = [\n        \"name\", \"wmc\", \"dit\", \"noc\", \"cbo\", \"rfc\", \"lcom\", \"ca\", \"ce\", \"npm\", \"lcom3\", \"lco\", \"dam\", \"moa\", \"mfa\", \"cam\", \"ic\", \"cbm\", \"amc\", \"max_cc\", \"avg_cc\", \"bug\"\n    ]\n\n    const columns = keyNames.map((t) => {\n        let column = {\n            title: t.toUpperCase(),\n            width: 100,\n            dataIndex: t,\n            key: t,\n        }\n\n        if (t == \"name\") {\n            column = {\n                ...column,\n                fixed: \"left\",\n            }\n        } else if (t == \"bug\") {\n            column = {\n                ...column,\n                fixed: \"right\",\n            }\n        }\n\n        return column\n    });\n    const data = metrics.map((m, id) => {\n        return {\n            ...m,\n            name: m.name.split(\".\").pop(),\n            key: id\n        }\n    });\n    console.log(\"end\")\n    return (\n        <Table \n            columns={columns}\n            dataSource={data}\n            scroll={{ x: '100vw', y: 'calc(100vh - 20em)' }}\n            bordered\n            pagination={true}\n            title={header}\n            style={{\"fontSize\": \"10px\"}}\n        />\n    )\n}\n\nexport default MetricTable","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from \"react-redux\";\nimport { Row, Col, Form, Input, Button, Icon, Checkbox,  } from 'antd';\nimport { Link } from 'react-router-dom'\n\nimport { loginActions } from '../../state/duck/login'\nimport { Spinner, Modal } from './components'\n\nclass LoginForm extends React.Component {\n    static propTypes = {\n        handleSubmit: PropTypes.func.isRequired,\n        clearError: PropTypes.func.isRequired,\n        accessToken: PropTypes.string,\n        error: PropTypes.string,\n        loading: PropTypes.bool,\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                this.props.handleSubmit({\n                    user: {\n                        username: values.username,\n                        password: values.password\n                    },\n                    remember: values.remember\n                })\n            }\n        })\n    }\n\n    clearError = () => {\n        this.props.clearError()\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form\n        const { loading, error, accessToken } = this.props\n\n        return (\n            <Row type=\"flex\" justify=\"center\" align=\"middle\" className=\"container\">\n                <Col span={8}>\n                    <Spinner visible={loading} title={ \"Waiting to login\" } />\n                    <Modal \n                            title={ \"Login error\" }\n                            visible={error != null} \n                            content={error || \"\"} \n                            handleOk={this.clearError} \n                            handleCancel={this.clearError} />\n                        \n                    <Modal \n                            title={ \"Success\" }\n                            visible={ accessToken != null }\n                            content={ \"Success\" }\n                            handleOk={() => {\n                                this.props.history.push(\"/\")\n                            }}\n                            handleCancel={() => {\n                                this.props.history.push(\"/\")\n                            }}\n                    />\n\n                    <Form onSubmit={this.handleSubmit} className={\"center-form\"}>\n                        <Form.Item>\n                            {getFieldDecorator(\"username\", {\n                                rules: [{ required: true, message: 'Please input your username!' }],\n                            })(\n                                <Input \n                                    prefix={<Icon type=\"user\" style={{ 'color': 'rgba(0, 0, 0, .25)' }} />}                                    placeholder=\"Username\"\n                                />,\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator(\"password\", {\n                                rules: [{ required: true, message: 'Please input your password!' }],\n                            })(\n                                <Input \n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0, 0, 0, 0.25)' }}/>}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                />\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator(\"remember\", {\n                                valuePropName: 'checked',\n                                initialValue: true,\n                            })(<Checkbox>Remember me</Checkbox>)}\n                            <a style={{ float: \"right\" }} href=\"\">\n                                Forgot password\n                            </a>\n                            <Button type=\"primary\" htmlType=\"submit\" style={{ \"width\": \"100%\" }}>\n                                Login\n                            </Button>\n                            Or <Link to=\"/register\">Register</Link>\n                        </Form.Item>\n                    </Form>     \n                </Col>\n            </Row>   \n        )\n    }\n}\n\nconst mapStateToProps = ( state ) =>  {\n    return {\n        loading: state.login.loading,\n        accessToken: state.login.accessToken,\n        error: state.login.error    \n    }\n} \n\nconst mapDispatchToProps = ( dispatch ) => ( {\n    handleSubmit: (values) => dispatch(loginActions.loginRequest(values)),\n    clearError: () => dispatch(loginActions.clearError())\n} )\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create({ name: 'normal_login' })(LoginForm));","/* REDUCER(S)\n\nIt's a good practice to define your state shape first.\nBased on the state shape, multiple reducers might be defined in this file, combined and exported into a single reducer function.\n\n*/\n\nimport * as REGISTERTYPES from './types'\n\nlet initialState = {\n    loading: false,\n    success: false,\n    error: null,\n}\n\nconst registerReducer = (state, action) => {\n    switch (action.type) {\n        case REGISTERTYPES.REGISTER_START: {\n            return Object.assign({}, state, {\n                loading: true,\n                success: false,\n                error: null\n            })\n        }\n        case REGISTERTYPES.REGISTER_SUCCESS: {\n            const { accessToken } = action.payload\n            \n\n            return Object.assign({}, state, {\n                error: null,\n                loading: false,\n                success: true,\n            })\n        }\n        case REGISTERTYPES.REGISTER_ERROR: {\n            const { error } = action.payload\n\n            return Object.assign({}, state, {\n                error,\n                loading: false,\n                success: false\n            })\n        }\n        case REGISTERTYPES.REGISTER_CLEAR_ERROR: {\n            return Object.assign({}, state, {\n                error: null\n            })\n        }\n        default:\n            return initialState\n    }\n}\n\nexport {\n    registerReducer\n}","/* ACTION CREATOR FUNCTIONS\nPut here the functions that return an action object that can be dispatched\nHINT: Always use functions for consistency, don't export plain objects\n*/\n\nimport * as types from './types'\n\nconst registerRequest = (user) => ({\n    type: types.REGISTER_REQUEST,\n    payload: {\n        user    \n    }\n})\n\nconst registerStart = () => ({\n    type: types.REGISTER_START\n})\n\nconst registerError = ( errMsg ) => ({\n    type: types.REGISTER_ERROR,\n    payload: {\n        error: errMsg\n    }\n})\n\nconst registerSuccess = ( accessToken ) => ({\n    type: types.REGISTER_SUCCESS,\n    payload: {\n        accessToken,\n    }\n})\n\nconst clearError = () => ({\n    type: types.REGISTER_CLEAR_ERROR\n})\n\nexport {\n    registerRequest,\n    registerStart,\n    registerError,\n    registerSuccess,\n    clearError\n}","const REGISTER_REQUEST = \"AUTH_REGISTER_REQUEST\";\nconst REGISTER_START = \"AUTH_REGISTER_START\";\nconst REGISTER_SUCCESS = \"AUTH_REGISTER_SUCCESS\";\nconst REGISTER_ERROR = \"AUTH_REGISTER_ERROR\";\nconst REGISTER_CLEAR_ERROR = \"AUTH_REGISTER_CLEAR_ERROR\";\n\nexport {\n    REGISTER_REQUEST,\n    REGISTER_START,\n    REGISTER_SUCCESS,\n    REGISTER_ERROR,\n    REGISTER_CLEAR_ERROR\n}","import fetch from \"../../utils/fetch\"\n\nasync function register( user ) {\n    return await fetch(\"/auth/register\", \"POST\", {\n        ...user\n    });\n}\n\nexport {\n    register\n}","/* OPERATIONS = REDUX SAGAS\n\nThis file defines the public interface of the duck -- what can be dispatched from components\nSimple operations are just about forwarding an action creator, ex: simpleQuack\nComplex operations involve returning a thunk that dispatches multiple actions in a certain order, ex: complexQuack\n\n*/\n\nimport { call, put, race, delay, takeEvery } from 'redux-saga/effects'\n\nimport * as registerActions from './actions'\nimport * as registerTypes from './types'\nimport { CONFIG } from '../../globals'\nimport * as apis from \"./apis\"\n\nfunction* register(action) { \n    try {\n        yield put(registerActions.registerStart())\n        \n        const { response, timeout } = yield race({\n            response: call(apis.register, action.payload.user),\n            timeout: delay(CONFIG.REQUEST_TIMEOUT)\n        });\n\n        if (timeout) {\n            yield put(registerActions.registerError(\"Timeout\"))\n        } else if(response.result) {\n            yield put(registerActions.registerSuccess(response.result))\n        } else {\n            yield put(registerActions.registerError(response.msg))\n        }\n    } catch(err) {\n        if (err.hasOwnProperty(\"response\")) {\n            yield put(registerActions.registerError(err.response.msg))\n        } else {\n            yield put(registerActions.registerError(err.toString()))\n        }\n    }\n}\n\nexport default function* registerSaga() {\n    yield takeEvery(registerTypes.REGISTER_REQUEST, register )\n}\n\nexport {\n    register \n}","/* INDEX FILE\n\nThis file, from a module perspective, behaves as the duck file form the original proposal.\nIt exports as default the reducer function of the duck.\nIt exports as named export the selectors and the operations.\nOptionally it exports the actions and types if they are needed in other ducks.\n\n*/\n\nimport { registerReducer } from './reducers'\n\nimport * as registerSelectors from './selectors'\nimport registerOperations from './operations'\nimport * as registerActions from './actions'\nimport * as registerTypes from './types'\n\nexport {\n    registerSelectors,\n    registerOperations,\n    registerActions,\n    registerTypes\n};\n\nexport default registerReducer;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from \"react-redux\";\nimport { Row, Col, Form, Input, Button, Icon, Checkbox,  } from 'antd';\nimport { Link } from 'react-router-dom'\nimport { Redirect } from 'react-router-dom';\n\nimport { registerActions } from '../../state/duck/register'\nimport { Spinner, Modal } from './components'\n\nclass RegisterForm extends React.Component {\n    static propTypes = {\n        handleSubmit: PropTypes.func.isRequired,\n        clearError: PropTypes.func.isRequired,\n        accessToken: PropTypes.string,\n        error: PropTypes.string,\n        loading: PropTypes.bool,\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                this.props.handleSubmit({\n                    username: values.username,\n                    email: values.email,\n                    firstname: values.firstname,\n                    lastname: values.lastname,\n                    password: values.password\n            })\n            }\n        })\n    }\n\n    clearError = () => {\n        this.props.clearError()\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form\n        const { loading, error, success } = this.props\n        const formItemLayout = {\n            labelCol: {\n              xs: { span: 24 },\n              sm: { span: 8 },\n            },\n            wrapperCol: {\n              xs: { span: 24 },\n              sm: { span: 16 },\n            },\n          };\n\n        const tailFormItemLayout = {\n            wrapperCol: {\n              xs: {\n                span: 24,\n                offset: 0,\n              },\n              sm: {\n                span: 16,\n                offset: 8,\n              },\n            },\n          };\n      \n\n        return (\n            <Row type=\"flex\" justify=\"center\" align=\"middle\" className=\"container\">\n                <Col span={12}>\n                    <Spinner visible={loading} title={ \"Waiting to register\" } />\n                    <Modal \n                            title={ \"Register error\" }\n                            visible={error != null} \n                            content={error || \"\"} \n                            handleOk={this.clearError} \n                            handleCancel={this.clearError} />\n                        \n                    <Modal \n                            title={ \"Success\" }\n                            visible={ success }\n                            content={ \"Success\" }\n                            handleOk={() => {\n                                this.props.history.push(\"/login\")\n                            }}\n                            handleCancel={() => {\n                                this.props.history.push(\"/login\")\n                            }}\n                    />\n\n                    <Form {...formItemLayout} onSubmit={this.handleSubmit} className={\"center-form\"}>\n                        <Form.Item label=\"E-mail\">\n                            {getFieldDecorator('email', {\n                                rules: [\n                                    {\n                                        type: 'email',\n                                        message: 'The input is not valid E-mail',\n                                    },\n                                    {\n                                        required: true,\n                                        message: 'Please input your E-mail!',\n                                    },\n                                ],\n                            })(<Input />)}\n                        </Form.Item>\n                        <Form.Item label=\"Username\">\n                            {getFieldDecorator('username', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: 'Please input your username'\n                                    }\n                                ]\n                            })(<Input />)}\n                        </Form.Item>\n                        <Form.Item label=\"First name\">\n                            {getFieldDecorator('firstname', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: 'Please input your first name'\n                                    }\n                                ]\n                            })(<Input />)}\n                        </Form.Item>\n                        <Form.Item label=\"Last name\">\n                            {getFieldDecorator('lastname', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: 'Please input your last name'\n                                    }\n                                ]\n                            })(<Input />)}\n                        </Form.Item>\n                        <Form.Item label=\"Password\" hasFeedback>\n                            {getFieldDecorator('password', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: 'Please input your password!'\n                                    },\n                                ]\n                            })(<Input.Password />)}\n                        </Form.Item>\n                        <Form.Item label=\"Confirm Password\" hasFeedback>\n                            {getFieldDecorator('confirm', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: 'Please confirm your password'\n                                    }, {\n                                        validator: this.compareToFirstPassword\n                                    }\n                                ]\n                            })(<Input.Password />)}\n                        </Form.Item>\n                        <Form.Item {...tailFormItemLayout}>\n                            <Row gutter={8}>\n                                <Col span={6}>\n                                    <Button type=\"primary\" htmlType=\"submit\">\n                                        Register\n                                    </Button>\n\n                                </Col>\n                                <Col span={6}>\n                                    <Button type=\"primary\">\n                                        <Link to=\"/login\">Login</Link>\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form.Item>\n                    </Form>                \n                </Col>\n            </Row>   \n        )\n    }\n}\n\nconst mapStateToProps = ( state ) =>  {\n    return {\n        loading: state.register.loading,\n        success: state.register.success,\n        error: state.register.error    \n    }\n} \n\nconst mapDispatchToProps = ( dispatch ) => ( {\n    handleSubmit: (values) => dispatch(registerActions.registerRequest(values)),\n    clearError: () => dispatch(registerActions.clearError())\n} )\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create({ name: 'normal_register' })(RegisterForm));","import React from 'react'\nimport { Layout, Menu, Icon } from 'antd'\n\nimport { UserLayout, AdminLayout } from '../layouts'\nimport { parseToken } from '../../state/utils/token'\n\nconst { Header, Sider, Content } = Layout;\n\nclass AdminHome extends React.Component {\n    state = {\n        collapsed: true\n    }\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        })\n    }\n\n    render() {\n        return (\n            <Layout>\n                <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n                    <div className=\"logo\"></div>\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                        <Menu.Item key=\"1\">\n                            <span>Users</span>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\">\n                            <span>Alogirthms</span>\n                        </Menu.Item>\n                        <Menu.Item key=\"3\">\n                            <span>Account</span>\n                        </Menu.Item>\n                    </Menu>\n                </Sider>\n                <Layout>\n                    <Header style={{ background: \"#fff\", padding: 0 }}>\n                        <Icon \n                            className=\"trigger\"\n                            type={this.state.collapsed ? \"menu-unfold\" : \"menu-fold\"}\n                            onClick={this.toggle} \n                        />\n                    </Header>\n                    <Content \n                        style={{\n                            margin: '24px 16px',\n                            padding: 24,\n                            background: '#fff',\n                            minHeight: 280,\n                        }}>\n                            Content\n                    </Content>\n                </Layout>\n            </Layout>\n        )\n    }\n}\n\n\nconst HomePage = (props) => {\n    const currentUser = parseToken(props.accessToken)\n    console.log(currentUser)\n    switch(currentUser.role) {\n        case \"admin\": {\n            return <AdminLayout {...props} />\n        }\n        case \"user\": {\n            return <UserLayout {...props} />\n        }\n        default: {\n            return <UserLayout {...props} />\n        }\n    }\n}\n\nexport default HomePage","import React from 'react'\n\nclass Alogrithm extends React.Component {\n    render() {\n        return (\n            <div>Alogirthm page</div>\n        )\n    }\n}\n\nexport default Alogrithm","/* REDUCER(S)\n\nIt's a good practice to define your state shape first.\nBased on the state shape, multiple reducers might be defined in this file, combined and exported into a single reducer function.\n\n*/\n\nimport * as USERTYPES from './types'\nimport { combineReducers } from \"redux\";\n\n\nconst initialFindState = {\n    loading: false,\n    users: [],\n    currentuser: null,\n    error: null\n}\n\nconst findReducer = (state=initialFindState, action) => {\n    switch (action.type) {\n        case USERTYPES.FIND_ALL_START:\n            return Object.assign({}, state, {\n                loading: true,\n            })\n        case USERTYPES.FIND_ALL_SUCCESS:\n            return Object.assign({}, state, {\n                loading: false,\n                error: null,\n                users: action.payload.users\n            })\n        case USERTYPES.FIND_ALL_ERROR:\n            return Object.assign({}, state, {\n                loading: false,\n                error: action.payload.error,\n                users: []\n            })\n        case USERTYPES.FIND_BY_ID_START:\n            return Object.assign({}, state, {\n                loading: true,\n            })\n        case USERTYPES.FIND_BY_ID_SUCCESS:\n            return Object.assign({}, state, {\n                loading: false,\n                currentUser: action.payload.currentUser\n            })\n        case USERTYPES.FIND_BY_ID_ERROR:\n            return Object.assign({}, state, {\n                loading: false,\n                currentUser: null,\n                error: action.payload.error\n            })\n        case USERTYPES.CLEAR_FIND_ERROR:\n            return Object.assign({}, state, {\n                error: null\n            })\n        default:\n            return state\n    }\n}\n\nconst reducer = combineReducers({\n    find: findReducer,\n})\n\nexport default reducer","const FIND_ALL_REQUEST = \"USER_FIND_ALL_REQUEST\"\nconst FIND_ALL_START = \"USER_FIND_ALL_START\"\nconst FIND_ALL_SUCCESS = \"USER_FIND_ALL_SUCCESS\"\nconst FIND_ALL_ERROR = \"USER_FIND_ALL_ERROR\"\n\nconst FIND_BY_ID_REQUEST = \"USER_FIND_BY_ID_REQUEST\"\nconst FIND_BY_ID_START = \"USER_FIND_BY_ID_START\"\nconst FIND_BY_ID_IN_ARRAY = \"USER_FIND_BY_ID_IN_ARRAY\"\nconst FIND_BY_ID_SUCCESS = \"USER_FIND_BY_ID_SUCCESS\"\nconst FIND_BY_ID_ERROR = \"USER_FIND_BY_ID_ERROR\"\n\nconst CLEAR_FIND_ERROR = \"USER_CLEAR_FIND_ERROR\"\n\nexport {\n    FIND_ALL_REQUEST,\n    FIND_ALL_START,\n    FIND_ALL_SUCCESS,\n    FIND_ALL_ERROR,\n\n    FIND_BY_ID_REQUEST,\n    FIND_BY_ID_START,\n    FIND_BY_ID_IN_ARRAY,\n    FIND_BY_ID_SUCCESS,\n    FIND_BY_ID_ERROR,\n    \n    CLEAR_FIND_ERROR,\n} ","/* ACTION CREATOR FUNCTIONS\nPut here the functions that return an action object that can be dispatched\nHINT: Always use functions for consistency, don't export plain objects\n*/\n\nimport * as types from './types'\n\nconst findAllRequest = () => ({\n    type: types.FIND_ALL_REQUEST\n})\n\nconst findAllStart = () => ({\n    type: types.FIND_ALL_START\n})\n\nconst findAllSuccess = (users) => ({\n    type: types.FIND_ALL_SUCCESS,\n    payload: {\n        users\n    }\n})\n\nconst findAllError = (error) => ({\n    type: types.FIND_ALL_ERROR,\n    payload: {\n        error\n    }\n})\n\nconst findByIdRequest = ( id ) => ({\n    type: types.FIND_BY_ID_REQUEST,\n    payload: {\n        id\n    }\n})\n\nconst findByIdStart = ( ) => ({\n    type: types.FIND_BY_ID_START\n})\n\nconst findByIdInArray = ( id ) => ({\n    type: types.FIND_BY_ID_IN_ARRAY,\n    payload: {\n        id\n    }\n})\n\nconst findByIdSuccess = ( user ) => ({\n    type: types.FIND_BY_ID_SUCCESS,\n    payload: {\n        currentUser: user\n    }\n})\n\nconst findByIdError = ( error ) => ({\n    type: types.FIND_BY_ID_ERROR,\n    payload: {\n        error\n    }\n})\n\nconst clearFindError = ( ) => ({\n    type: types.CLEAR_FIND_ERROR\n})\n\n\n\nexport {\n    findAllRequest,\n    findAllStart,\n    findAllSuccess,\n    findAllError,\n\n    findByIdRequest,\n    findByIdStart,\n    findByIdInArray,\n    findByIdSuccess,\n    findByIdError,\n    \n    clearFindError,\n}","import fetch from '../../utils/fetch'\nimport { getToken } from '../../utils/token'\n\nasync function findAll() {\n    return await fetch(\"/users\", \"GET\", null, getToken())\n}\n\nasync function findById( id ) {\n    return await fetch(\"/users/\" + id, \"GET\", null, getToken())\n}\n\n\nexport {\n    findAll,\n    findById,\n}","/* OPERATIONS = REDUX SAGAS\n\nThis file defines the public interface of the duck -- what can be dispatched from components\nSimple operations are just about forwarding an action creator, ex: simpleQuack\nComplex operations involve returning a thunk that dispatches multiple actions in a certain order, ex: complexQuack\n\n*/\n\nimport { call, put, race, delay, takeEvery } from 'redux-saga/effects'\n\nimport * as userActions from './actions'\nimport * as userTypes from './types'\nimport { CONFIG } from '../../globals'\nimport * as apis from \"./apis\"\n\nfunction* findAll(action) {\n    try {\n        yield put(userActions.findAllStart())\n\n        const { response, timeout } = yield race({\n            response: call(apis.findAll),\n            timeout: delay(CONFIG.REQUEST_TIMEOUT)\n        })\n\n        if (timeout) {\n            yield put(userActions.findAllError(\"Timeout\"))\n        } else if(response.result) {\n            yield put(userActions.findAllSuccess(response.result))\n        } else {\n            yield put(userActions.findAllError(response.msg))\n        }\n    } catch(err) {\n        if (err.hasOwnProperty(\"response\")) {\n            yield put(userActions.findAllError(err.response.msg))\n        } else {\n            yield put(userActions.findAllError(err.toString()))\n        }\n    }\n}\n\nfunction* findById(action) {\n    try {\n        yield put(userActions.findByIdStart())\n\n        const { response, timeout } = yield race({\n            response: call(apis.findById, action.payload.id),\n            timeout: delay(CONFIG.REQUEST_TIMEOUT)\n        })\n\n        if (timeout) {\n            yield put(userActions.findByIdError(\"Timeout\"))\n        } else if (response.result) {\n            yield put(userActions.findByIdSuccess(response.result))\n        } else {\n            yield put(userActions.findByIdError(response.msg))\n        }\n    } catch (err) {\n        if (err.hasOwnProperty(\"response\")) {\n            yield put(userActions.findByIdError(err.response.msg))\n        } else {\n            yield put(userActions.findByIdError(err.toString()))\n        }\n    }\n}\n\n\nexport default function* userSage() {\n    yield takeEvery(userTypes.FIND_ALL_REQUEST, findAll)\n    yield takeEvery(userTypes.FIND_BY_ID_REQUEST, findById)\n}\n\nexport {\n    findAll,\n    findById,\n}","/* INDEX FILE\n\nThis file, from a module perspective, behaves as the duck file form the original proposal.\nIt exports as default the reducer function of the duck.\nIt exports as named export the selectors and the operations.\nOptionally it exports the actions and types if they are needed in other ducks.\n\n*/\n\nimport userReducer from './reducers'\nimport * as userSelectors from './selectors'\nimport userOperations from './operations'\nimport * as userActions from './actions'\nimport * as userTypes from './types'\n\nexport {\n    userSelectors,\n    userOperations,\n    userActions,\n    userTypes\n}\n\nexport default userReducer","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Switch, Route } from 'react-router-dom'\nimport { Form, Button, Input } from 'antd'\n\nimport { FileTable, Spinner, Modal } from './components'\nimport { userActions } from '../../state/duck/user';\n\nimport { getToken, parseToken } from '../../state/utils/token'\n\nclass AccountDetail extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        const { match: { params } } = this.props;\n        // user = parseToken(getToken())\n        \n        let user = parseToken(getToken())\n        this.props.findByIdRequest(user._id)\n    }\n\n    clearError = () => {\n        if (this.props.findError) this.props.clearFindError()\n    }\n    \n\n    render() {\n        const { loading, currentUser, findError } = this.props\n        const { getFieldDecorator } = this.props.form\n        \n        return (\n            <div>\n                <Spinner visible={loading} title={ \"Finding users\" } />\n                <Modal \n                    title={ \"Something went wrong\" }\n                    visible={findError != null} \n                    content={findError} \n                    handleOk={this.clearError} \n                    handleCancel={this.clearError} \n                />\n                {\n                    (currentUser) ? (\n                        <Form onSubmit={() => {}} className={\"center-form\"}>\n                            <Form.Item label=\"User name\">\n                                <Input value={currentUser.username} disabled={true}/>\n                            </Form.Item>\n                            <Form.Item label=\"Email\">\n                                <Input value={currentUser.email} disabled={true}/>\n                            </Form.Item>\n                            <Form.Item label=\"First name\">\n                                <Input value={currentUser.firstname} disabled={true}/>\n                            </Form.Item>\n                            <Form.Item label=\"Last name\">\n                                <Input value={currentUser.lastname} disabled={true}/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button>Edit</Button>\n                                <Button>Delete</Button>\n                            </Form.Item>\n                        </Form>            \n\n                    ) : (\n                        <div></div>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ( state ) => {\n    console.log(state.user)\n    return {\n        loading: state.user.find.loading,\n        findError: state.user.find.error,\n        currentUser: state.user.find.currentUser,\n    }\n}\n\nconst mapDispatchToProps = ( dispatch ) => ({\n    findByIdRequest: ( id ) => dispatch(userActions.findByIdRequest(id)),\n    clearFindError: () => dispatch(userActions.clearFindError()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create({ name: 'user_detail_form' })(AccountDetail))","const FIND_ALL_REQUEST = \"PROJECT_FIND_ALL_REQUEST\"\nconst FIND_ALL_START = \"PROJECT_FIND_ALL_START\"\nconst FIND_ALL_SUCCESS = \"PROJECT_FIND_ALL_SUCCESS\"\nconst FIND_ALL_ERROR = \"PROJECT_FIND_ALL_ERROR\"\n\nconst FIND_BY_ID_REQUEST = \"PROJECT_FIND_BY_ID_REQUEST\"\nconst FIND_BY_ID_START = \"PROJECT_FIND_BY_ID_START\"\nconst FIND_BY_ID_IN_ARRAY = \"PROJECT_FIND_BY_ID_IN_ARRAY\"\nconst FIND_BY_ID_SUCCESS = \"PROJECT_FIND_BY_ID_SUCCESS\"\nconst FIND_BY_ID_ERROR = \"PROJECT_FIND_BY_ID_ERROR\"\n\nconst CLEAR_FIND_ERROR = \"PROJECT_CLEAR_FIND_ERROR\"\n\nconst CREATE_REQUEST = \"PROJECT_CREATE_REQUEST\"\nconst CREATE_START = \"PROJECT_CREATE_REQUEST_START\"\nconst CREATE_SUCCESS = \"PROJECT_CREATE_REQUEST_SUCCESS\"\nconst CREATE_ERROR = \"PROJECT_CREATE_REQUEST_ERROR\"\nconst CLEAR_CREATE = \"PROJECT_CLEAR_CREATE\"\n\nconst DELETE_REQUEST = \"PROJECT_DELETE_REQUEST\"\nconst DELETE_START = \"PROJECT_DELETE_START\"\nconst DELETE_SUCCESS = \"PROJECT_DELETE_SUCCESS\"\nconst DELETE_ERROR = \"PROJECT_DELETE_ERROR\"\nconst CLEAR_DELETE = \"PROJECT_CLEAR_DELETE\"\n\nexport {\n    FIND_ALL_REQUEST,\n    FIND_ALL_START,\n    FIND_ALL_SUCCESS,\n    FIND_ALL_ERROR,\n\n    FIND_BY_ID_REQUEST,\n    FIND_BY_ID_START,\n    FIND_BY_ID_IN_ARRAY,\n    FIND_BY_ID_SUCCESS,\n    FIND_BY_ID_ERROR,\n    \n    CLEAR_FIND_ERROR,\n\n    CREATE_REQUEST,\n    CREATE_START,\n    CREATE_SUCCESS,\n    CREATE_ERROR,\n    CLEAR_CREATE,\n\n    DELETE_REQUEST,\n    DELETE_START,\n    DELETE_SUCCESS,\n    DELETE_ERROR,\n    CLEAR_DELETE,\n} ","/* REDUCER(S)\n\nIt's a good practice to define your state shape first.\nBased on the state shape, multiple reducers might be defined in this file, combined and exported into a single reducer function.\n\n*/\n\nimport * as PROJECTTYPES from './types'\nimport { combineReducers } from \"redux\";\n\n\nconst initialFindState = {\n    loading: false,\n    projects: [],\n    currentProject: null,\n    error: null\n}\nconst findReducer = (state=initialFindState, action) => {\n    switch (action.type) {\n        case PROJECTTYPES.FIND_ALL_START:\n            return Object.assign({}, state, {\n                loading: true,\n            })\n        case PROJECTTYPES.FIND_ALL_SUCCESS:\n            return Object.assign({}, state, {\n                loading: false,\n                error: null,\n                projects: action.payload.projects\n            })\n        case PROJECTTYPES.FIND_ALL_ERROR:\n            return Object.assign({}, state, {\n                loading: false,\n                error: action.payload.error,\n                projects: []\n            })\n        case PROJECTTYPES.FIND_BY_ID_START:\n            return Object.assign({}, state, {\n                loading: true,\n            })\n        case PROJECTTYPES.FIND_BY_ID_IN_ARRAY: \n            let currentProject = state.projects.find(item => item._id == action.payload.id)\n            if (!currentProject) currentProject = null\n\n            return Object.assign({}, state, {\n                loading: false,\n                currentProject\n            })\n        case PROJECTTYPES.FIND_BY_ID_SUCCESS:\n            return Object.assign({}, state, {\n                loading: false,\n                currentProject: action.payload.currentProject\n            })\n        case PROJECTTYPES.FIND_BY_ID_ERROR:\n            return Object.assign({}, state, {\n                loading: false,\n                currentProject: null,\n                error: action.payload.error\n            })\n        case PROJECTTYPES.CLEAR_FIND_ERROR:\n            return Object.assign({}, state, {\n                error: null\n            })\n        case PROJECTTYPES.CREATE_SUCCESS:\n            return Object.assign({}, state, {\n                projects: [...state.projects, action.payload.createdProject]\n            })\n        case PROJECTTYPES.DELETE_SUCCESS:\n            return Object.assign({}, state, {\n                projects: state.projects.filter(item => item._id != action.payload.id)\n            })\n        default:\n            return state\n    }\n}\n\nconst initialCreateState = {\n    loading: false,\n    createdProject: null,\n    error: null\n}\nconst createReducer = (state=initialCreateState, action) => {\n    switch (action.type) {\n        case PROJECTTYPES.CREATE_START:\n            return Object.assign({}, state, {\n                loading: true,\n                error: null,\n            })\n        case PROJECTTYPES.CREATE_ERROR:\n            return Object.assign({}, state, {\n                loading: false,\n                createdProject: null,\n                error: action.payload.error\n            })\n        case PROJECTTYPES.CREATE_SUCCESS:\n            return Object.assign({}, state, {\n                loading: false,\n                createdProject: action.payload.createdProject,\n                error: null\n            })\n        case PROJECTTYPES.CLEAR_CREATE:\n            return Object.assign({}, state, {\n                loading: false,\n                createdProject: null,\n                error: null\n            })\n        default:\n            return state\n    }\n}\n\nconst initialDeleteState = {\n    loading: false,\n    success: false,\n    error: null\n}\nconst deleteReducer = (state=initialDeleteState, action) => {\n    switch (action.type) {\n        case PROJECTTYPES.DELETE_START:\n            return Object.assign({}, state, {\n                loading: true,\n                error: null\n            })\n        case PROJECTTYPES.DELETE_ERROR:\n            return Object.assign({}, state, {\n                loading: false,\n                success: false,\n                error: action.payload.error\n            })\n        case PROJECTTYPES.DELETE_SUCCESS:\n            return Object.assign({}, state, {\n                loading: false,\n                error: null,\n                success: true,\n            })\n        case PROJECTTYPES.CLEAR_DELETE:\n            return Object.assign({}, state, {\n                loading: false,\n                success: false,\n                error: null\n            })\n        default:\n            return state;\n    }\n}\n\nconst reducer = combineReducers({\n    find: findReducer,\n    create: createReducer,\n    delete: deleteReducer\n})\n\nexport default reducer","/* ACTION CREATOR FUNCTIONS\nPut here the functions that return an action object that can be dispatched\nHINT: Always use functions for consistency, don't export plain objects\n*/\n\nimport * as types from './types'\n\nconst findAllRequest = () => ({\n    type: types.FIND_ALL_REQUEST\n})\n\nconst findAllStart = () => ({\n    type: types.FIND_ALL_START\n})\n\nconst findAllSuccess = (projects) => ({\n    type: types.FIND_ALL_SUCCESS,\n    payload: {\n        projects\n    }\n})\n\nconst findAllError = (error) => ({\n    type: types.FIND_ALL_ERROR,\n    payload: {\n        error\n    }\n})\n\nconst findByIdRequest = ( id ) => ({\n    type: types.FIND_BY_ID_REQUEST,\n    payload: {\n        id\n    }\n})\n\nconst findByIdStart = ( ) => ({\n    type: types.FIND_BY_ID_START\n})\n\nconst findByIdInArray = ( id ) => ({\n    type: types.FIND_BY_ID_IN_ARRAY,\n    payload: {\n        id\n    }\n})\n\nconst findByIdSuccess = ( project ) => ({\n    type: types.FIND_BY_ID_SUCCESS,\n    payload: {\n        currentProject: project\n    }\n})\n\nconst findByIdError = ( error ) => ({\n    type: types.FIND_BY_ID_ERROR,\n    payload: {\n        error\n    }\n})\n\nconst clearFindError = ( ) => ({\n    type: types.CLEAR_FIND_ERROR\n})\n\nconst createRequest = ( project ) => ({\n    type: types.CREATE_REQUEST,\n    payload: {\n        project\n    }\n})\n\nconst createStart = ( ) => ({\n    type: types.CREATE_START\n})\n\nconst createSuccess = ( createdProject ) => ({\n    type: types.CREATE_SUCCESS,\n    payload: {\n        createdProject\n    }\n})\n\nconst createError = ( error ) => ({\n    type: types.CREATE_ERROR,\n    payload: {\n        error\n    }\n})\n\nconst clearCreate = ( ) => ({\n    type: types.CLEAR_CREATE\n})\n\nconst deleteRequest = ( id ) => ({\n    type: types.DELETE_REQUEST,\n    payload: {\n        id\n    }\n})\n\nconst deleteStart = ( ) => ({\n    type: types.DELETE_START\n})\n\nconst deleteSuccess = ( id ) => ({\n    type: types.DELETE_SUCCESS,\n    payload: {\n        id\n    }\n})\n\nconst deleteError = ( error ) => ({\n    type: types.DELETE_ERROR,\n    payload: {\n        error\n    }\n})\n\nconst clearDelete = ( ) => ({\n    type: types.CLEAR_DELETE,\n})\n\n\nexport {\n    findAllRequest,\n    findAllStart,\n    findAllSuccess,\n    findAllError,\n\n    findByIdRequest,\n    findByIdStart,\n    findByIdInArray,\n    findByIdSuccess,\n    findByIdError,\n    \n    clearFindError,\n\n    createRequest,\n    createStart,\n    createSuccess,\n    createError,\n    clearCreate,\n\n    deleteRequest,\n    deleteStart,\n    deleteSuccess,\n    deleteError,\n    clearDelete,\n}","import fetch from '../../utils/fetch'\nimport { getToken } from '../../utils/token'\n\nasync function findAll() {\n    return await fetch(\"/projects\", \"GET\", null, getToken())\n}\n\nasync function findById( id ) {\n    return await fetch(\"/projects/\" + id, \"GET\", null, getToken())\n}\n\nasync function create( project ) {\n    return await fetch(\"/projects\", \"POST\", {\n        ...project\n    }, getToken())\n}\n\nasync function deleteById( id ) {\n    return await fetch(\"/projects/\" + id, \"DELETE\", null, getToken())\n}\n\nexport {\n    findAll,\n    findById,\n    create,\n    deleteById\n}","/* OPERATIONS = REDUX SAGAS\n\nThis file defines the public interface of the duck -- what can be dispatched from components\nSimple operations are just about forwarding an action creator, ex: simpleQuack\nComplex operations involve returning a thunk that dispatches multiple actions in a certain order, ex: complexQuack\n\n*/\n\nimport { call, put, race, delay, takeEvery } from 'redux-saga/effects'\n\nimport * as projectActions from './actions'\nimport * as projectTypes from './types'\nimport { CONFIG } from '../../globals'\nimport * as apis from \"./apis\"\n\nfunction* findAll(action) {\n    try {\n        yield put(projectActions.findAllStart())\n\n        const { response, timeout } = yield race({\n            response: call(apis.findAll),\n            timeout: delay(CONFIG.REQUEST_TIMEOUT)\n        })\n\n        if (timeout) {\n            yield put(projectActions.findAllError(\"Timeout\"))\n        } else if(response.result) {\n            yield put(projectActions.findAllSuccess(response.result))\n        } else {\n            yield put(projectActions.findAllError(response.msg))\n        }\n    } catch(err) {\n        if (err.hasOwnProperty(\"response\")) {\n            yield put(projectActions.findAllError(err.response.msg))\n        } else {\n            yield put(projectActions.findAllError(err.toString()))\n        }\n    }\n}\n\nfunction* findById(action) {\n    try {\n        yield put(projectActions.findByIdStart())\n\n        const { response, timeout } = yield race({\n            response: call(apis.findById, action.payload.id),\n            timeout: delay(CONFIG.REQUEST_TIMEOUT)\n        })\n\n        if (timeout) {\n            yield put(projectActions.findByIdError(\"Timeout\"))\n        } else if (response.result) {\n            yield put(projectActions.findByIdSuccess(response.result))\n        } else {\n            yield put(projectActions.findByIdError(response.msg))\n        }\n    } catch (err) {\n        if (err.hasOwnProperty(\"response\")) {\n            yield put(projectActions.findByIdError(err.response.msg))\n        } else {\n            yield put(projectActions.findByIdError(err.toString()))\n        }\n    }\n}\n\nfunction* create(action) {\n    try {\n        yield put(projectActions.createStart())\n\n        const { response, timeout } = yield race({\n            response: call(apis.create, action.payload.project),\n            timeout: delay(CONFIG.REQUEST_TIMEOUT)\n        })\n\n        if (timeout) {\n            yield put(projectActions.createError(\"Timeout\"))\n        } else if (response.result) {\n            yield put(projectActions.createSuccess(response.result))\n        } else {\n            yield put(projectActions.createError(response.msg))\n        }\n    } catch (err) {\n        if (err.hasOwnProperty(\"response\")) {\n            yield put(projectActions.createError(err.response.msg))\n        } else {\n            yield put(projectActions.createError(err.toString()))\n        }\n    }\n}\n\nfunction* deleteById(action) {\n    try {\n        yield put(projectActions.deleteStart())\n\n        const { response, timeout } = yield race({\n            response: call(apis.deleteById, action.payload.id),\n            timeout: delay(CONFIG.REQUEST_TIMEOUT)\n        })\n\n        if (timeout) {\n            yield put(projectActions.deleteError(\"Timeout\"))\n        } else if (response.result) {\n            yield put(projectActions.deleteSuccess(action.payload.id))\n        } else {\n            yield put(projectActions.deleteError(response.msg))\n        }\n    } catch (err) {\n        if (err.hasOwnProperty(\"response\")) {\n            yield put(projectActions.deleteError(err.response.msg))\n        } else {\n            yield put(projectActions.deleteError(err.toString()))\n        }\n    }\n}\n\nexport default function* projectSage() {\n    yield takeEvery(projectTypes.FIND_ALL_REQUEST, findAll)\n    yield takeEvery(projectTypes.FIND_BY_ID_REQUEST, findById)\n    yield takeEvery(projectTypes.CREATE_REQUEST, create)\n    yield takeEvery(projectTypes.DELETE_REQUEST, deleteById)\n}\n\nexport {\n    findAll,\n    findById,\n    create,\n    deleteById,\n}","/* INDEX FILE\n\nThis file, from a module perspective, behaves as the duck file form the original proposal.\nIt exports as default the reducer function of the duck.\nIt exports as named export the selectors and the operations.\nOptionally it exports the actions and types if they are needed in other ducks.\n\n*/\n\nimport projectReducer from './reducers'\nimport * as projectSelectors from './selectors'\nimport projectOperations from './operations'\nimport * as projectActions from './actions'\nimport * as projectTypes from './types'\n\nexport {\n    projectSelectors,\n    projectOperations,\n    projectActions,\n    projectTypes\n}\n\nexport default projectReducer","import React from 'react'\nimport { connect } from \"react-redux\";\nimport { Route, Switch, Link } from 'react-router-dom';\nimport { Row, Col, Button, Card, Typography } from 'antd'\n\nimport { projectActions } from '../../state/duck/project'\nimport { Spinner, Modal } from './components'\nimport { projectRoutes } from '../../routes/'\n\nconst { Title } = Typography\nclass ProjectPage extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount(props) {\n        this.props.findAll()\n    }\n    \n    clearError = () => {\n        this.props.clearError()\n    }\n\n    render() {\n        const { loading, projects, error } = this.props\n\n        return (\n            <div style={{ background: '#ECECEC', padding: '30px', 'wordWrap': 'normal'}}>\n                <Switch>\n                    {\n                        projectRoutes.map(route => (\n                            <Route key={ route.path } { ...route } />\n                        ))\n                    }\n                    <Route exact path=\"/projects\">\n                        <Spinner visible={loading} title={ \"Finding projects\" } />\n                        <Modal \n                            title={ \"Find error\" }\n                            visible={error != null} \n                            content={error || \"\"} \n                            handleOk={this.clearError} \n                            handleCancel={this.clearError} \n                        />\n                        <Row>                        \n                            <Col span={12}><h2>Projects</h2></Col>\n                            <Col span={12} align={\"right\"}><Button><Link to=\"/projects/create\">New</Link></Button></Col>\n                        </Row>\n                        <Row>\n                            {\n                                    (projects.length == 0) ? <div>No projects found</div> :\n                                    makeCardData(projects, 2).map((r, id) => {\n                                        return (\n                                            <Row  key={id} gutter={16} style={{\"marginBottom\": \"10px\"}}>\n                                                {\n                                                    r.map((c) => {\n                                                        return (\n                                                            <Col key={c._id} span={12}>\n                                                                {\n                                                                    (c.status == \"done\") ? (\n                                                                        <Link to={`/projects/${c._id}/files`}>\n                                                                            <Card hoverable title={c.name} bordered={false}>\n                                                                                <p className=\"truncate\">\n                                                                                    {c.description}\n                                                                                </p>\n                                                                                <p>\n                                                                                    {c.github}\n                                                                                </p>\n                                                                            </Card>\n                                                                        </Link>\n                                                                    ) : <Card hoverable title={`${c.name} (updating)`} bordered={false} loading={true}>\n                                                                            <p className=\"truncate\">\n                                                                                {c.description}\n                                                                            </p>\n                                                                            <p>\n                                                                                {c.github}\n                                                                            </p>\n                                                                        </Card>\n                                                                }\n                                                            </Col>\n                                                        )\n                                                    })\n                                                }\n                                            </Row>\n                                        )\n                                    })\n                            }\n                        </Row>\n                    </Route>\n                </Switch>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ( state, ownProps ) => {\n    return {\n        loading: state.project.find.loading,\n        projects: state.project.find.projects,\n        error: state.project.find.error\n    }\n}\n\nconst mapDispatchToProps = ( dispatch ) => ( {\n    findAll: () => dispatch(projectActions.findAllRequest()),\n    clearError: () => dispatch(projectActions.clearFindError())\n} )\n\nconst makeCardData = (projects, numRows) => {\n    let cardRows = [];\n    let currentRow = [projects[0]];\n    for (let i = 1; i < projects.length; i++) {\n        currentRow.push(projects[i])\n\n        if ((i+1) % numRows == 0) {\n            cardRows.push(currentRow)\n            currentRow = []\n        }\n\n    }\n    cardRows.push(currentRow)\n\n    return cardRows\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectPage)\n","import React from 'react'\nimport { connect } from \"react-redux\";\nimport { Route, Switch, Link } from 'react-router-dom';\nimport { Row, Col, Button, Form, Input } from 'antd'\n\nimport { projectActions } from '../../state/duck/project'\nimport { Spinner, Modal } from './components'\n\nclass ProjectForm extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values)\n                this.props.create(values)\n            }\n        })\n    }\n\n    clearError = () => {\n        this.props.clearCreate()\n    }\n\n    handleSuccess = () => {\n        this.props.clearCreate()\n        this.props.history.push(\"/projects\")\n    }\n\n    validateGithubLink = (rule, value, callback) => {\n        let re = new RegExp(\"^https\\:\\/\\/github\\.com\\/[^\\/]+\\/[^\\/]+\\.git$\")\n        if (!re.test(value)) {\n            callback('Github link should ends with \".git\"')\n        } else {\n            callback()\n        }\n    }\n\n    render() {\n        const { loading, createdProject, error } = this.props\n        const { getFieldDecorator } = this.props.form\n\n        return (<div>\n            <Spinner visible={loading} title={ \"Creating projects\" } />\n            <Modal \n                title={ \"Create error\" }\n                visible={error != null} \n                content={error || \"\"} \n                handleOk={this.clearError} \n                handleCancel={this.clearError} \n            />\n\n            <Modal \n                title={ \"Success !\" }\n                visible={createdProject != null} \n                content={\"Project created\"} \n                handleOk={this.handleSuccess} \n                handleCancel={this.handleSuccess} \n            />\n\n            <Form onSubmit={this.handleSubmit} className=\"center-form\">\n                <Form.Item label=\"Project name\">\n                    {getFieldDecorator(\"name\", {\n                        rules: [{ required: true, message: \"Please enter project name\"}]\n                    })(\n                        <Input />\n                    )}\n                    </Form.Item>\n                    <Form.Item label=\"Description\">\n                        {getFieldDecorator('description')(<Input />)}\n                    </Form.Item>\n                    <Form.Item label=\"Github link\">\n                        {getFieldDecorator(\"github\", {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: \"Please input the project's github link\"\n                                }, {\n                                    validator: this.validateGithubLink\n                                }\n                            ]\n                        })(\n                            <Input \n                                placeholder=\"E.g https://github.com/username/projectname.git\"\n                            />\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                        <Button htmlType=\"submit\">Create</Button>\n                    </Form.Item>\n\n            </Form>\n\n            \n        </div>)\n    }\n}\n\nconst mapStateToProps = ( state ) => {\n    return {\n        loading: state.project.create.loading,\n        createdProject: state.project.create.createdProject,\n        error: state.project.create.error    \n    }\n}\n\nconst mapDispatchToProps = ( dispatch ) => ({\n    create: (project) => dispatch(projectActions.createRequest(project)),\n    clearCreate: () => dispatch(projectActions.clearCreate()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create({ name: 'project_form' })(ProjectForm))","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Switch, Route } from 'react-router-dom'\nimport { Typography, Row, Col, Button } from 'antd'\n\nimport { FileTable, Spinner, Modal } from './components'\nimport { projectActions } from '../../state/duck/project';\n\nclass ProjectDetail extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            deleting: false\n        }\n    }\n\n    componentDidMount() {\n        const { match: { params } } = this.props;\n        const { projects } = this.props\n\n        this.props.findByIdRequest(params.projectId)\n    }\n\n    startDelete = () => {\n        this.setState({\n            deleting: true\n        })\n    }\n\n    stopDelete = () => {\n        this.setState({\n            deleting: false\n        })\n    }\n\n    clearError = () => {\n        if (this.props.deleteError) {\n            this.props.clearDelete()\n            this.stopDelete()\n        }\n        if (this.props.findError) this.props.clearFindError()\n    }\n\n    handleSuccess = () => {\n        this.props.clearDelete()\n        this.props.history.push(\"/projects\")\n    }\n\n\n    delete = () => {\n        const { match: { params } } = this.props;\n        this.props.deleteById(params.projectId)\n    }\n\n    render() {\n        const { loading, currentProject, findError, deleteError, deleteSuccess } = this.props\n        return (\n            <div>\n                <Spinner visible={loading} title={ \"Finding projects\" } />\n                <Modal \n                    title={ \"Something went wrong\" }\n                    visible={findError != null || deleteError != null} \n                    content={findError || deleteError || \"\"} \n                    handleOk={this.clearError} \n                    handleCancel={this.clearError} \n                />\n                {\n                    (currentProject) ? (\n                        <Row>\n                            <Modal \n                                title={ \"Are you sure?\"}\n                                visible={this.state.deleting} \n                                content={\"This will completely delete your project\"} \n                                handleOk={this.delete} \n                                handleCancel={this.stopDelete} \n                            />\n                            <Modal \n                                title={ \"Delete Success\"}\n                                visible={deleteSuccess} \n                                content={\"\"} \n                                handleOk={() => this.handleSuccess()} \n                                handleCancel={() => this.handleSuccess()} \n                            />\n\n                            <Row align=\"middle\">\n                                <Col span={12}>\n                                    <h3>{currentProject.name}</h3>\n                                </Col>\n                                <Col span={12} align=\"right\">\n                                    <Button onClick={() => this.startDelete()}>Delete</Button>\n                                </Col>\n                            </Row>\n                            <Row align=\"middle\">{currentProject.description}</Row>\n                            <FileTable files={[{previous: \"/projects\"}, ...currentProject.files]}/>      \n                        </Row>\n                    ) : (\n                        <div></div>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ( state ) => {\n    console.log(state.project)\n    return {\n        projects: state.project.find.projects,\n        loading: state.project.find.loading,\n        findError: state.project.find.error,\n        currentProject: state.project.find.currentProject,\n        deleteError: state.project.delete.error,\n        deleteSuccess: state.project.delete.success,\n    }\n}\n\nconst mapDispatchToProps = ( dispatch ) => ({\n    findByIdRequest: ( id ) => dispatch(projectActions.findByIdRequest(id)),\n    findByIdInArray: ( id ) => {\n        dispatch(projectActions.findByIdStart())\n        dispatch(projectActions.findByIdInArray(id))\n    },\n    deleteById: ( id ) => dispatch(projectActions.deleteRequest(id)),\n    clearFindError: () => dispatch(projectActions.clearFindError()),\n    clearDelete: () => dispatch(projectActions.clearDelete()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectDetail)","/* REDUCER(S)\n\nIt's a good practice to define your state shape first.\nBased on the state shape, multiple reducers might be defined in this file, combined and exported into a single reducer function.\n\n*/\n\nimport * as FILETYPES from \"./types\"\nimport { combineReducers } from \"redux\"\n\nconst initialFindState = {\n    loading: false,\n    currentFile: null,\n    error: null\n}\nconst findReducer = (state=initialFindState, action) => {\n    switch (action.type) {\n        case FILETYPES.FIND_BY_ID_START:\n            return Object.assign({}, state, {\n                loading: true,\n                currentFile: null,\n                error: null\n            })    \n        case FILETYPES.FIND_BY_ID_ERROR:\n            return Object.assign({}, state, {\n                loading: false,\n                currentFile: null,\n                error: action.payload.error\n            })    \n        case FILETYPES.FIND_BY_ID_SUCCESS:\n            return Object.assign({}, state, {\n                loading: false,\n                currentFile: action.payload.currentFile,\n                error: null\n            })    \n        case FILETYPES.CLEAR_FIND_ERROR:\n            return Object.assign({}, state, {\n                loading: false,\n                currentFile: null,\n                error: null\n            })    \n        default:\n            return state;\n    }\n}\n\nconst initialPredictState = {\n    loading: false,\n    updatedFile: null,\n    error: null,\n}\n\nconst predictReducer = (state=initialPredictState, action) => {\n    switch (action.type) {\n        case FILETYPES.PREDICT_BY_ID_START:\n            return Object.assign({}, state, {\n                loading: true,\n                updatedFile: null,\n                error: null\n            })\n        case FILETYPES.PREDICT_BY_ID_ERROR:\n            return Object.assign({}, state, {\n                loading: false,\n                updatedFile: null,\n                error: action.payload.error\n            })\n        case FILETYPES.PREDICT_BY_ID_SUCCESS:\n            return Object.assign({}, state, {\n                loading: false,\n                updatedFile: action.payload.updatedFile,\n                error: null\n            })\n        case FILETYPES.CLEAR_PREDICT:\n            return Object.assign({}, state, {\n                loading: false,\n                updatedFile: null,\n                error: null\n            })\n        default:\n            return state;\n    }\n}\n\nconst reducer = combineReducers({\n    find: findReducer,\n    predict: predictReducer\n})\n\nexport default reducer\n","const FIND_BY_ID_REQUEST = \"FILE_FIND_BY_ID_REQUEST\"\nconst FIND_BY_ID_START = \"FILE_FIND_BY_ID_START\"\nconst FIND_BY_ID_ERROR = \"FILE_FIND_BY_ID_ERROR\"\nconst FIND_BY_ID_SUCCESS = \"FILE_FIND_BY_ID_SUCCESS\"\nconst CLEAR_FIND_ERROR = \"FILE_CLEAR_FIND_ERROR\"\n\nconst PREDICT_BY_ID_REQUEST = \"FILE_PREDICT_BY_ID_REQUEST\"\nconst PREDICT_BY_ID_START = \"FILE_PREDICT_BY_ID_START\"\nconst PREDICT_BY_ID_ERROR = \"FILE_PREDICT_BY_ID_ERROR\"\nconst PREDICT_BY_ID_SUCCESS = \"FILE_PREDICT_BY_ID_SUCCESS\"\nconst CLEAR_PREDICT = \"FILE_CLEAR_PREDICT_BY_ID\"\n\nexport {\n    FIND_BY_ID_REQUEST,\n    FIND_BY_ID_START,\n    FIND_BY_ID_ERROR,\n    FIND_BY_ID_SUCCESS,\n    CLEAR_FIND_ERROR,\n\n    PREDICT_BY_ID_REQUEST,\n    PREDICT_BY_ID_START,\n    PREDICT_BY_ID_ERROR,\n    PREDICT_BY_ID_SUCCESS,\n    CLEAR_PREDICT,\n}","/* ACTION CREATOR FUNCTIONS\nPut here the functions that return an action object that can be dispatched\nHINT: Always use functions for consistency, don't export plain objects\n*/\n\nimport * as types from './types'\n\nconst findByIdRequest = ( id, projectId ) => ({\n    type: types.FIND_BY_ID_REQUEST,\n    payload: {\n        id,\n        projectId\n    }\n})\n\nconst findByIdStart = ( ) => ({\n    type: types.FIND_BY_ID_START\n})\n\nconst findByIdSuccess = ( file ) => ({\n    type: types.FIND_BY_ID_SUCCESS,\n    payload: {\n        currentFile: file\n    }\n})\n\nconst findByIdError = ( error ) => ({\n    type: types.FIND_BY_ID_ERROR,\n    payload: {\n        error\n    }\n})\n\nconst clearFindError = ( ) => ({\n    type: types.CLEAR_FIND_ERROR\n})\n\nconst predictByIdRequest = ( id, modelId ) => ({\n    type: types.PREDICT_BY_ID_REQUEST,\n    payload: {\n        id,\n        modelId\n    }\n})\n\nconst predictByIdStart = ( ) => ({\n    type: types.PREDICT_BY_ID_START\n})\n\nconst predictByIdSuccess = ( file ) => ({\n    type: types.PREDICT_BY_ID_SUCCESS,\n    payload: {\n        updatedFile: file\n    }\n})\n\nconst predictByIdError = ( error ) => ({\n    type: types.PREDICT_BY_ID_ERROR,\n    payload: {\n        error\n    }\n})\n\nconst clearPredict = ( ) => ({\n    type: types.CLEAR_PREDICT\n})\n\nexport {\n    findByIdRequest,\n    findByIdStart,\n    findByIdError,\n    findByIdSuccess,\n    clearFindError,\n\n    predictByIdRequest,\n    predictByIdStart,\n    predictByIdError,\n    predictByIdSuccess,\n    clearPredict\n}","import fetch from '../../utils/fetch'\nimport { getToken } from '../../utils/token'\n\nasync function findById( id, projectId ) {\n    return await fetch(`/files/${id}?projectId=${projectId}`, \"GET\", null, getToken())\n}\n\nasync function predictById( fileId, modelId ) {\n    return await fetch(\"/files/\" + fileId + \"/predict\", \"POST\", {\n        modelId\n    }, getToken())\n}\n\nexport {\n    findById,\n    predictById\n}","/* OPERATIONS = REDUX SAGAS\n\nThis file defines the public interface of the duck -- what can be dispatched from components\nSimple operations are just about forwarding an action creator, ex: simpleQuack\nComplex operations involve returning a thunk that dispatches multiple actions in a certain order, ex: complexQuack\n\n*/\n\nimport { call, put, race, delay, takeEvery } from 'redux-saga/effects'\n\nimport * as fileActions from './actions'\nimport * as fileTypes from './types'\nimport { CONFIG } from '../../globals'\nimport * as apis from \"./apis\"\n\nfunction* findById(action) {\n    try {\n        yield put(fileActions.findByIdStart())\n\n        const { response, timeout } = yield race({\n            response: call(apis.findById, action.payload.id, action.payload.projectId),\n            timeout: delay(CONFIG.REQUEST_TIMEOUT)\n        })\n\n        if (timeout) {\n            yield put(fileActions.findByIdError(\"Timeout\"))\n        } else if (response.result) {\n            yield put(fileActions.findByIdSuccess(response.result))\n        } else {\n            yield put(fileActions.findByIdError(response.msg))\n        }\n    } catch (err) {\n        if (err.hasOwnProperty(\"response\")) {\n            yield put(fileActions.findByIdError(err.response.msg))\n        } else {\n            yield put(fileActions.findByIdError(err.toString()))\n        }\n    }\n}\n\nfunction* predictById(action) {\n    try {\n        yield put(fileActions.predictByIdStart())\n\n        const { response, timeout } = yield race({\n            response: call(apis.predictById, action.payload.id, action.payload.modelId),\n            timeout: delay(CONFIG.REQUEST_TIMEOUT)\n        })\n\n        if (timeout) {\n            yield put(fileActions.predictByIdError(\"Timeout\"))\n        } else if (response.result) {\n            yield put(fileActions.predictByIdSuccess(response.result))\n        } else {\n            yield put(fileActions.predictByIdError(response.msg))\n        }\n    } catch (err) {\n        if (err.hasOwnProperty(\"response\")) {\n            yield put(fileActions.predictByIdError(err.response.msg))\n        } else {\n            yield put(fileActions.predictByIdError(err.toString()))\n        }\n    }\n\n}\n\nexport default function* fileSaga() {\n    yield takeEvery(fileTypes.FIND_BY_ID_REQUEST, findById)\n    yield takeEvery(fileTypes.PREDICT_BY_ID_REQUEST, predictById)\n}\n\nexport {\n    findById,\n    predictById\n}","/* INDEX FILE\n\nThis file, from a module perspective, behaves as the duck file form the original proposal.\nIt exports as default the reducer function of the duck.\nIt exports as named export the selectors and the operations.\nOptionally it exports the actions and types if they are needed in other ducks.\n\n*/\n\nimport fileReducer from './reducers'\nimport * as fileSelectors from './selectors'\nimport fileOperations from './operations'\nimport * as fileActions from './actions'\nimport * as fileTypes from './types'\n\nexport {\n    fileSelectors,\n    fileOperations,\n    fileActions,\n    fileTypes\n}\n\nexport default fileReducer","/* REDUCER(S)\n\nIt's a good practice to define your state shape first.\nBased on the state shape, multiple reducers might be defined in this file, combined and exported into a single reducer function.\n\n*/\n\nimport * as MODELTYPES from \"./types\"\nimport { combineReducers } from \"redux\"\n\nconst initialFindState = {\n    loading: false,\n    models: [],\n    currentModel: null,\n    error: null\n}\nconst findReducer = (state=initialFindState, action) => {\n    switch (action.type) {\n        case MODELTYPES.FIND_ALL_START:\n            return Object.assign({}, state, {\n                loading: true,\n                models: [],\n                error: null\n            })    \n        case MODELTYPES.FIND_ALL_ERROR:\n            return Object.assign({}, state, {\n                loading: false,\n                models: [],\n                error: action.payload.error\n            })    \n        case MODELTYPES.FIND_ALL_SUCCESS:\n            return Object.assign({}, state, {\n                loading: false,\n                models: action.payload.models,\n                error: null\n            })    \n        case MODELTYPES.CLEAR_FIND_ERROR:\n            return Object.assign({}, state, {\n                loading: false,\n                models: [],\n                error: null\n            })\n        case MODELTYPES.FIND_BY_ID_START:\n            return Object.assign({}, state, {\n                loading: true,\n                error: null,\n                currentModel: null\n            })    \n        case MODELTYPES.FIND_BY_ID_ERROR:\n            return Object.assign({}, state, {\n                loading: false,\n                error: action.payload.error,\n                currentModel: null\n            })    \n        case MODELTYPES.FIND_BY_ID_SUCCESS:\n            return Object.assign({}, state, {\n                loading: false,\n                currentModel: action.payload.currentModel,\n                error: null\n            })    \n        case MODELTYPES.CLEAR_FIND_BY_ID:\n            return Object.assign({}, state, {\n                loading: false,\n                currentModel: null,\n                error: null\n            })\n        case MODELTYPES.CREATE_SUCCESS:\n            return Object.assign({}, state, {\n                models: [...state.models, action.payload.createdModel]\n            })\n        case MODELTYPES.DELETE_SUCCESS:\n            return Object.assign({}, state, {\n                models: state.models.filter(item => item._id != action.payload.deletedId)\n            })\n        default:\n            return state;\n    }\n}\n\nconst initialCreateState = {\n    loading: false,\n    createdModel: null,\n    error: null\n}\nconst createReducer = (state=initialCreateState, action) => {\n    switch (action.type) {\n        case MODELTYPES.CREATE_START:\n            return Object.assign({}, state, {\n                loading: true,\n                createdModel: null,\n                error: null\n            })    \n        case MODELTYPES.CREATE_ERROR:\n            return Object.assign({}, state, {\n                loading: false,\n                createdModel: null,\n                error: action.payload.error\n            })\n        case MODELTYPES.CREATE_SUCCESS:\n            return Object.assign({}, state, {\n                loading: false,\n                createdModel: action.payload.createdModel,\n                error: null\n            })\n        case MODELTYPES.CLEAR_CREATE:\n            return Object.assign({}, state, {\n                loading: false,\n                createdModel: null,\n                error: null\n            })\n        default:\n            return state;\n    }\n}\n\nconst initialDeleteCreate = {\n    loading: false,\n    success: false,\n    error: null\n}\n\nconst deleteReducer = (state=initialDeleteCreate, action) => {\n    switch (action.type) {\n        case MODELTYPES.DELETE_START:\n            return Object.assign({}, state, {\n                loading: true,\n                success: false,\n                error: null\n            })\n        case MODELTYPES.DELETE_ERROR:\n            return Object.assign({}, state, {\n                loading: false,\n                success: false,\n                error: action.payload.error\n            })\n        case MODELTYPES.DELETE_SUCCESS:\n            return Object.assign({}, state, {\n                loading: false,\n                success: true,\n                error: null\n            })\n        case MODELTYPES.CLEAR_DELETE:\n            return Object.assign({}, state, {\n                loading: false,\n                success: false,\n                error: null,\n            })\n        default:\n            return state;\n    }\n}\n\nconst reducer = combineReducers({\n    find: findReducer,\n    create: createReducer,\n    delete: deleteReducer,\n})\n\nexport default reducer\n","const FIND_ALL_REQUEST = \"MODEL_FIND_ALL_REQUEST\"\nconst FIND_ALL_START = \"MODEL_FIND_ALL_START\"\nconst FIND_ALL_ERROR = \"MODEL_FIND_ALL_ERROR\"\nconst FIND_ALL_SUCCESS = \"MODEL_FIND_ALL_SUCCESS\"\nconst CLEAR_FIND_ERROR = \"MODEL_CLEAR_FIND_ERROR\"\n\nconst FIND_BY_ID_REQUEST = \"MODEL_FIND_BY_ID_REQUEST\"\nconst FIND_BY_ID_START = \"MODEL_FIND_BY_ID_START\"\nconst FIND_BY_ID_ERROR = \"MODEL_FIND_BY_ID_ERROR\"\nconst FIND_BY_ID_SUCCESS = \"MODEL_FIND_BY_ID_SUCCESS\"\nconst CLEAR_FIND_BY_ID = \"MODEL_CLEAR_FIND_BY_ID\"\n\nconst CREATE_REQUEST = \"MODEL_CREATE_REQUEST\"\nconst CREATE_START = \"MODEL_CREATE_START\"\nconst CREATE_ERROR = \"MODEL_CREATE_ERROR\"\nconst CREATE_SUCCESS = \"MODEL_CREATE_SUCCESS\"\nconst CLEAR_CREATE = \"MODEL_CLEAR_CREATE\"\n\nconst UPDATE_BY_ID_REQUEST = \"MODEL_UPDATE_REQUEST\"\nconst UPDATE_BY_ID_START = \"MODEL_UPDATE_START\"\nconst UPDATE_BY_ID_ERROR = \"MODEL_UPDATE_ERROR\"\nconst UPDATE_BY_ID_SUCCESS =\"MODEL_UPDATE_SUCCESS\"\nconst CLEAR_UPDATE_BY_ID = \"MODEL_CLEAR_UPDATE\"\n\nconst DELETE_REQUEST = \"MODEL_DELETE_REQUEST\"\nconst DELETE_START = \"MODEL_DELETE_START\"\nconst DELETE_ERROR = \"MODEL_DELETE_ERROR\"\nconst DELETE_SUCCESS = \"MODEL_DELETE_SUCCESS\"\nconst CLEAR_DELETE = \"MODEL_CLEAR_DELETE\"\n\nexport {\n    FIND_ALL_REQUEST,\n    FIND_ALL_START,\n    FIND_ALL_ERROR,\n    FIND_ALL_SUCCESS,\n    CLEAR_FIND_ERROR,\n\n    FIND_BY_ID_REQUEST,\n    FIND_BY_ID_START,\n    FIND_BY_ID_ERROR,\n    FIND_BY_ID_SUCCESS,\n    CLEAR_FIND_BY_ID,\n\n    CREATE_REQUEST,\n    CREATE_START,\n    CREATE_ERROR,\n    CREATE_SUCCESS,\n    CLEAR_CREATE,\n\n    UPDATE_BY_ID_REQUEST,\n    UPDATE_BY_ID_START,\n    UPDATE_BY_ID_ERROR,\n    UPDATE_BY_ID_SUCCESS,\n    CLEAR_UPDATE_BY_ID,\n\n    DELETE_REQUEST,\n    DELETE_START,\n    DELETE_ERROR,\n    DELETE_SUCCESS,\n    CLEAR_DELETE,\n}","/* ACTION CREATOR FUNCTIONS\nPut here the functions that return an action object that can be dispatched\nHINT: Always use functions for consistency, don't export plain objects\n*/\n\nimport * as types from './types'\n\nconst findAllRequest = ( ) => ({\n    type: types.FIND_ALL_REQUEST,\n})\n\nconst findAllStart = ( ) => ({\n    type: types.FIND_ALL_START\n})\n\nconst findAllSuccess = ( models ) => ({\n    type: types.FIND_ALL_SUCCESS,\n    payload: {\n        models\n    }\n})\n\nconst findAllError = ( error ) => ({\n    type: types.FIND_ALL_ERROR,\n    payload: {\n        error\n    }\n})\n\nconst clearFindError = ( ) => ({\n    type: types.CLEAR_FIND_ERROR\n})\n\nconst findByIdRequest = ( id ) => ({\n    type: types.FIND_BY_ID_REQUEST,\n    payload: {\n        id\n    }\n})\n\nconst findByIdStart = () => ({\n    type: types.FIND_BY_ID_START\n})\n\nconst findByIdError = ( error ) => ({\n    type: types.FIND_BY_ID_ERROR,\n    payload: {\n        error\n    }\n})\n\nconst findByIdSuccess = ( currentModel ) => ({\n    type: types.FIND_BY_ID_SUCCESS,\n    payload: {\n        currentModel\n    }\n})\n\nconst clearFindById = ( ) => ({\n    type: types.CLEAR_FIND_BY_ID\n})\n\nconst createRequest = ( model ) => ({\n    type: types.CREATE_REQUEST,\n    payload: {\n        model\n    }\n})\n\nconst createStart = ( ) => ({\n    type: types.CREATE_START\n})\n\nconst createError = ( error ) => ({\n    type: types.CREATE_ERROR,\n    payload: {\n        error\n    }\n})\n\nconst createSuccess = ( createdModel ) => ({\n    type: types.CREATE_SUCCESS,\n    payload: {\n        createdModel\n    }\n})\n\nconst clearCreate = ( ) => ({\n    type: types.CLEAR_CREATE\n})\n\nconst updateRequest = ( model ) => ({\n    type: types.UPDATE_BY_ID_REQUEST,\n    payload: {\n        model\n    }\n})\n\nconst deleteByIdRequest = ( id ) => ({\n    type: types.DELETE_REQUEST,\n    payload: {\n        id\n    }\n})\n\nconst deleteStart = ( ) => ({\n    type: types.DELETE_START\n})\n\nconst deleteError = ( error ) => ({\n    type: types.DELETE_ERROR,\n    payload: {\n        error\n    }\n})\n\nconst deleteSuccess = ( deletedId ) => ({\n    type: types.DELETE_SUCCESS,\n    payload: {\n        deletedId\n    }\n})\n\nconst clearDelete = ( ) => ({\n    type: types.CLEAR_DELETE\n})\n\nexport {\n    findAllRequest,\n    findAllStart,\n    findAllError,\n    findAllSuccess,\n    clearFindError,\n\n    findByIdRequest,\n    findByIdStart,\n    findByIdError,\n    findByIdSuccess,\n    clearFindById,\n\n    createRequest,\n    createStart,\n    createError,\n    createSuccess,\n    clearCreate,\n\n    deleteByIdRequest,\n    deleteStart,\n    deleteError,\n    deleteSuccess,\n    clearDelete,\n}","import fetch from '../../utils/fetch'\nimport { getToken } from '../../utils/token'\n\nasync function findAll( ) {\n    return await fetch(`/models`, \"GET\", null, getToken())\n}\n\nasync function findById ( id ) {\n    return await fetch(`/models/${id}`, \"GET\", null, getToken())\n}\n\nasync function create ( model ) {\n    let formData = new FormData()\n    formData.append(\"name\", model.name)\n    if (model.description) formData.append(\"description\", model.description)\n    formData.append(\"file\", model.file)\n\n    return await fetch(`/models`, \"POST\", formData, getToken(), true)\n}\n\nasync function deleteById ( id ) {\n    return await fetch(`/models/${id}`, \"DELETE\", null, getToken())\n}\n\nexport {\n    findAll,\n    findById,\n    create,\n    deleteById\n}","/* OPERATIONS = REDUX SAGAS\n\nThis file defines the public interface of the duck -- what can be dispatched from components\nSimple operations are just about forwarding an action creator, ex: simpleQuack\nComplex operations involve returning a thunk that dispatches multiple actions in a certain order, ex: complexQuack\n\n*/\n\nimport { call, put, race, delay, takeEvery } from 'redux-saga/effects'\n\nimport * as modelActions from './actions'\nimport * as modelTypes from './types'\nimport { CONFIG } from '../../globals'\nimport * as apis from \"./apis\"\n\nfunction* findAll(action) {\n    try {\n        yield put(modelActions.findAllStart())\n\n        const { response, timeout } = yield race({\n            response: call(apis.findAll),\n            timeout: delay(CONFIG.REQUEST_TIMEOUT)\n        })\n\n        if (timeout) {\n            yield put(modelActions.findAllError(\"Timeout\"))\n        } else if (response.result) {\n            yield put(modelActions.findAllSuccess(response.result))\n        } else {\n            yield put(modelActions.findAllError(response.msg))\n        }\n    } catch (err) {\n        if (err.hasOwnProperty(\"response\")) {\n            yield put(modelActions.findAllError(err.response.msg))\n        } else {\n            yield put(modelActions.findAllError(err.toString()))\n        }\n    }\n}\n\nfunction* findById(action) {\n    try {\n        yield put(modelActions.findByIdStart())\n\n        const { response, timeout } = yield race({\n            response: call(apis.findById, action.payload.id),\n            timeout: delay(CONFIG.REQUEST_TIMEOUT)\n        })\n\n        if (timeout) {\n            yield put(modelActions.findByIdError(\"Timeout\"))\n        } else if (response.result) {\n            yield put(modelActions.findByIdSuccess(response.result))\n        } else {\n            yield put(modelActions.findByIdError(response.msg))\n        }\n    } catch (err) {\n        if (err.hasOwnProperty(\"response\")) {\n            yield put(modelActions.findByIdError(err.response.msg))\n        } else {\n            yield put(modelActions.findByIdError(err.toString()))\n        }\n    }\n}\n\nfunction* create(action) {\n    try {\n        yield put(modelActions.createStart())\n\n        const { response, timeout } = yield race({\n            response: call(apis.create, action.payload.model),\n            timeout: delay(CONFIG.REQUEST_TIMEOUT)\n        })\n\n        if (timeout) {\n            yield put(modelActions.createError(\"Timeout\"))\n        } else if (response.result) {\n            yield put(modelActions.createSuccess(response.result))\n        } else {\n            yield put(modelActions.createError(response.msg))\n        }\n    } catch (err) {\n        if (err.hasOwnProperty(\"response\")) {\n            yield put(modelActions.createError(err.response.msg))\n        } else {\n            yield put(modelActions.createError(err.toString()))\n        }\n    }\n}\n\nfunction* deleteById(action) {\n    try {\n        yield put(modelActions.deleteStart())\n\n        const { response, timeout } = yield race({\n            response: call(apis.deleteById, action.payload.id),\n            timeout: delay(CONFIG.REQUEST_TIMEOUT)\n        })\n\n        if (timeout) {\n            yield put(modelActions.deleteError(\"Timeout\"))\n        } else if (response.result) {\n            yield put(modelActions.deleteSuccess(response.result))\n        } else {\n            yield put(modelActions.deleteError(response.msg))\n        }\n    } catch (err) {\n        if (err.hasOwnProperty(\"response\")) {\n            yield put(modelActions.deleteError(err.response.msg))\n        } else {\n            yield put(modelActions.deleteError(err.toString()))\n        }\n    }\n}\n\n\nexport default function* modelSaga() {\n    yield takeEvery(modelTypes.FIND_ALL_REQUEST, findAll)\n    yield takeEvery(modelTypes.FIND_BY_ID_REQUEST, findById)\n    yield takeEvery(modelTypes.CREATE_REQUEST, create)\n    yield takeEvery(modelTypes.DELETE_REQUEST, deleteById)\n}\n\nexport {\n    findAll,\n    findById,\n    create,\n    deleteById\n}","/* INDEX FILE\n\nThis file, from a module perspective, behaves as the duck model form the original proposal.\nIt exports as default the reducer function of the duck.\nIt exports as named export the selectors and the operations.\nOptionally it exports the actions and types if they are needed in other ducks.\n\n*/\n\nimport modelReducer from './reducers'\nimport * as modelSelectors from './selectors'\nimport modelOperations from './operations'\nimport * as modelActions from './actions'\nimport * as modelTypes from './types'\n\nexport {\n    modelSelectors,\n    modelOperations,\n    modelActions,\n    modelTypes\n}\n\nexport default modelReducer","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Typography, Row, Col, Button, Select } from 'antd'\nimport { Switch, Route } from 'react-router-dom'\n\nimport { fileActions } from '../../state/duck/file'\nimport { modelActions } from '../../state/duck/model'\nimport { FileTable, MetricTable, Spinner, Modal } from './components'\n\nconst { Option } = Select\nclass FileDetail extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            predicting: false,\n            modelId: null,\n        }\n    }\n\n    componentDidMount() {\n        const { match: { params } } = this.props;\n\n        this.props.findByIdRequest(params.fileId, params.projectId)\n    }\n\n    clearFileError = () => {\n        this.props.clearFindByIdError()\n    }\n\n    clearModelError = () => {\n        this.props.clearFindModelError()\n    }\n\n    clearPredict = () => {\n        this.props.clearPredict()\n    }\n\n    predict = () => {\n        const { match: { params } } = this.props;\n        \n        this.props.predictByIdRequest(params.fileId, this.state.modelId)\n    }\n\n    togglePredicting = () => {\n        this.setState({\n            predicting: !this.state.predicting\n        }, () => {\n            if ((this.state.predicting) && (this.props.models.length == 0)) {\n                this.props.findModelRequest()\n            }    \n        })\n\n    }\n\n    selectModel = (modelId) => {\n        this.setState({\n            ...this.state,\n            modelId\n        })\n    }\n\n    componentDidUpdate(prevProps) {\n        const prevParams = prevProps.match.params\n        const params = this.props.match.params\n        \n        if ((prevParams.fileId != params.fileId) || (prevParams.projectId != params.projectId)) {\n            this.props.findByIdRequest(params.fileId, params.projectId)\n        }\n\n        console.log(this.props)\n    }\n\n    render() {\n        let { currentFile, fileLoading, fileError, \n                modelError, models, modelLoading,\n                predictLoading, predictError, updatedFile } = this.props\n        \n        const { path, url, params } = this.props.match\n\n        const prevPath = url.replace(`/${params.fileId}`, \"\")\n\n        if (currentFile) {\n            if (currentFile.hasOwnProperty(\"metrics\") && currentFile.metrics.length > 0) {\n                return (\n                    <Row>\n                        <Spinner visible={fileLoading || modelLoading || predictLoading} title={ \"Loading\" } />\n                        <Modal \n                            title={ \"Some thing went wrong\" }\n                            visible={fileError != null} \n                            content={fileError || \"\"} \n                            handleOk={this.clearFileError} \n                            handleCancel={this.clearFileError} />\n\n                        <Modal \n                            title={ \"Some thing went wrong\" }\n                            visible={modelError != null} \n                            content={modelError || \"\"} \n                            handleOk={this.clearModelError} \n                            handleCancel={this.clearModelError} />\n\n                        <Modal \n                            title={ \"Some thing went wrong\" }\n                            visible={predictError != null} \n                            content={predictError || \"\"} \n                            handleOk={this.clearPredict} \n                            handleCancel={this.clearPredict} />\n\n                        <Modal \n                            title={ \"Predict success\" }\n                            visible={updatedFile != null} \n                            content={\"\"} \n                            handleOk={() => {this.props.clearPredict(); this.props.history.goBack();}} \n                            handleCancel={() => {this.props.clearPredict(); this.props.history.goBack()}} />\n\n\n                        <Row align=\"middle\">\n                            <Col span={8}>\n                                <h3>{currentFile.name}</h3>\n                            </Col>\n                            <Col span={8}>\n                                {\n                                    this.state.predicting? <Select \n                                                                onChange={(value) => this.selectModel(value)} \n                                                                style={{\"minWidth\": \"300px\"}}>\n                                        {\n                                            models.map((m) => {\n                                                return (<Option key={m._id} value={m._id}>{m.name}</Option>)\n                                            })\n                                        }\n                                    </Select> : \"\"\n                                }\n                            </Col>\n                            <Col span={8} align=\"right\">\n                                {\n                                    this.state.predicting? <Button style={{\"marginRight\": \"10px\"}} onClick={() => this.predict()}>Predict</Button>: \"\"\n                                }\n                                <Button onClick={(e) => this.togglePredicting()}>{this.state.predicting?\"Cancel\":\"Predict\"}</Button>\n                            </Col>\n\n                        </Row>\n                        <MetricTable metrics={currentFile.metrics} /> \n                    </Row>\n                )    \n            } else if (currentFile.childs && currentFile.childs.length > 0) {\n                return (\n                    <Row>\n                        <Spinner visible={fileLoading} title={ \"Loading\" } />\n                        <Modal \n                            title={ \"Some thing went wrong\" }\n                            visible={fileError != null} \n                            content={fileError || \"\"} \n                            handleOk={this.clearFileError} \n                            handleCancel={this.clearFileError} />\n\n                        <Row align=\"middle\">\n                            <h3>{currentFile.name}</h3>\n                        </Row>\n                        <FileTable files={[{previous: prevPath}, ...currentFile.childs]} />  \n                    </Row>\n                )\n\n            } else {\n                return (\n                    <Row align=\"middle\">\n                        <h3>{currentFile.name}</h3>\n                    </Row>\n                )\n            }\n        } else {\n            return (\n                <div></div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = ( state ) => {\n    return {\n        currentFile: state.file.find.currentFile,\n        models: state.model.find.models,\n        fileLoading: state.file.find.loading,\n        modelLoading: state.model.find.loading,\n        fileError: state.file.find.error,\n        modelError: state.model.find.error,\n        predictLoading: state.file.predict.loading,\n        updatedFile: state.file.predict.updatedFile,\n        predictError: state.file.predict.error,\n    }\n}\n\nconst mapDispatchToProps = ( dispatch ) => {\n    return {\n        findByIdRequest: (id, projectId) => dispatch(fileActions.findByIdRequest(id, projectId)),\n        findModelRequest: () => dispatch(modelActions.findAllRequest()),\n        clearFindByIdError: () => dispatch(fileActions.clearFindError()),\n        clearFindModelError: () => dispatch(modelActions.clearFindError()),\n        predictByIdRequest: (id, modelId) => dispatch(fileActions.predictByIdRequest(id, modelId)),\n        clearPredict: () => dispatch(fileActions.clearPredict())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileDetail)","import React from 'react'\nimport { connect } from \"react-redux\";\nimport { Card, Row, Col, Button } from 'antd'\nimport { Link, useRouteMatch, Switch, Route } from 'react-router-dom'\n\nimport { modelActions } from '../../state/duck/model'\nimport { Spinner, Modal } from './components'\nimport { modelRoutes } from '../../routes'\n\nconst makeCardData = (models, numRows) => {\n    let cardRows = [];\n    let currentRow = [models[0]];\n    for (let i = 1; i < models.length; i++) {\n        currentRow.push(models[i])\n\n        if ((i+1) % numRows == 0) {\n            cardRows.push(currentRow)\n            currentRow = []\n        }\n\n    }\n    cardRows.push(currentRow)\n\n    return cardRows\n}\n\nclass ModeList extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        this.props.findAll()\n    }\n\n    clearError = () => {\n        this.props.clearError()\n    }\n\n    render() {\n        const { loading, models, error } = this.props\n        const num_col = 2\n\n        return (\n            <div style={{ background: '#ECECEC', padding: '30px', 'wordWrap': 'normal' }}>\n                <Switch>\n                    {\n                        modelRoutes.map(route => (\n                            <Route key={ route.path } { ...route }/>\n                        ))                    \n                    }\n\n                        <Route exact path=\"/models\">\n                            <Spinner visible={loading} title={ \"Finding models\" } />\n                            <Modal \n                                title={ \"Find error\" }\n                                visible={error != null} \n                                content={error || \"\"} \n                                handleOk={this.clearError} \n                                handleCancel={this.clearError} \n                            />\n                            <Row>\n                                <Col span={12}><h3>models</h3></Col>\n                                <Col span={12} align={\"right\"}><Button><Link to=\"/models/create\">New</Link></Button></Col>\n                            </Row>\n                            <Row>\n                                {\n                                    (models.length == 0) ? <div>No models found</div> :\n                                    makeCardData(models, num_col).map((r, id) => {\n                                        return (\n                                            <Row gutter={16} style={{\"marginBottom\": \"10px\"}}>\n                                                {\n                                                    r.map((c) => {\n                                                        return (\n                                                            <Col key={c._id} span={12}>\n                                                                <Link to={`/models/${c._id}`}>\n                                                                    <Card hoverable title={c.name} bordered={false}>\n                                                                        <p className=\"truncate\">\n                                                                            {c.description}\n                                                                        </p>\n                                                                    </Card>\n                                                                </Link>\n                                                            </Col>\n                                                        )\n                                                    })\n                                                }\n                                            </Row>\n                                        )\n                                    })\n                                }\n                            </Row>\n                        </Route>\n\n                </Switch>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ( state, ownProps ) => {\n    return {\n        loading: state.model.find.loading,\n        models: state.model.find.models,\n        error: state.model.find.error\n    }\n}\n\nconst mapDispatchToProps = ( dispatch ) => {\n    return {\n        findAll: () => dispatch(modelActions.findAllRequest()),\n        clearError: () => dispatch(modelActions.clearFindError())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModeList)","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Switch, Route } from 'react-router-dom'\nimport { Form, Button, Input } from 'antd'\n\nimport { FileTable, Spinner, Modal } from './components'\nimport { modelActions } from '../../state/duck/model';\n\nclass ModelDetail extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        const { match: { params } } = this.props;\n        this.props.findByIdRequest(params.modelId)\n    }\n\n    clearError = () => {\n        if (this.props.findError) this.props.clearFindError()\n    }\n    \n\n    render() {\n        const { loading, currentModel, findError } = this.props\n        const { getFieldDecorator } = this.props.form\n        let file_name = null\n\n        if (currentModel) {\n            let flist = currentModel.url.split(\"_\")\n            flist.splice(0, 1)\n            file_name = flist.join(\"_\")\n        }\n\n        return (\n            <div>\n                <Spinner visible={loading} title={ \"Finding models\" } />\n                <Modal \n                    title={ \"Something went wrong\" }\n                    visible={findError != null} \n                    content={findError} \n                    handleOk={this.clearError} \n                    handleCancel={this.clearError} \n                />\n                {\n                    (currentModel) ? (\n                        <Form onSubmit={() => {}} className={\"center-form\"}>\n                            <Form.Item label=\"Model name\">\n                                <Input value={currentModel.name} disabled={true}/>\n                            </Form.Item>\n                            <Form.Item label=\"Description\">\n                                <Input value={currentModel.description} disabled={true}/>\n                            </Form.Item>\n                            <Form.Item label=\"FileName\">\n                                <Input value={file_name} disabled={true}/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button>Edit</Button>\n                                <Button>Delete</Button>\n                            </Form.Item>\n                        </Form>            \n\n                    ) : (\n                        <div></div>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ( state ) => {\n    console.log(state.model)\n    return {\n        loading: state.model.find.loading,\n        findError: state.model.find.error,\n        currentModel: state.model.find.currentModel,\n    }\n}\n\nconst mapDispatchToProps = ( dispatch ) => ({\n    findByIdRequest: ( id ) => dispatch(modelActions.findByIdRequest(id)),\n    clearFindError: () => dispatch(modelActions.clearFindError()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create({ name: 'model_detail_form' })(ModelDetail))","import React from 'react'\nimport { connect } from \"react-redux\";\nimport { Form, Input, Button, Upload, Icon } from 'antd'\n\nimport { Spinner, Modal } from './components'\nimport { modelActions } from '../../state/duck/model'\n\nclass ModelForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            file: null,\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values)\n                this.props.create({\n                    ...values,\n                    file: this.state.file\n                })\n            }\n        })    \n    }\n\n    clearError = () => {\n        this.props.clearCreate()\n    }\n\n    handleSuccess = () => {\n        this.props.clearCreate()\n        this.props.history.push(\"/models\")\n    }\n\n    addFile = ( file ) => {\n        this.setState({\n            file\n        })\n\n        return false\n    }\n\n    removeFile = (file) => {\n        this.setState({\n            file: null\n        })\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form\n        const { loading, error, createdModel } = this.props\n        const { file } = this.state\n\n        return (\n            <div>\n                <Spinner visible={loading} title={ \"Creating models\" } />\n                <Modal \n                    title={ \"Create error\" }\n                    visible={error != null} \n                    content={error || \"\"} \n                    handleOk={this.clearError} \n                    handleCancel={this.clearError} \n                />\n                <Modal \n                    title={ \"Success !\" }\n                    visible={createdModel != null} \n                    content={\"Model created\"} \n                    handleOk={this.handleSuccess} \n                    handleCancel={this.handleSuccess} \n                />\n                <Form onSubmit={this.handleSubmit} className={\"center-form\"}>\n                    <Form.Item label=\"Model name\">\n                        {getFieldDecorator(\"name\", {\n                            rules: [{ required: true, message: \"Please enter model name\"}]\n                        })(\n                            <Input />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"Description\">\n                        {getFieldDecorator('description')(<Input />)}\n                    </Form.Item>\n                    <Form.Item label=\"File\">\n                        <Upload name=\"file\" \n                                accept=\".pkl\"\n                                beforeUpload={(e) => this.addFile(e)} \n                                onRemove={() => this.removeFile()}\n                                fileList={file?[file]:[]}>\n                            <Button>\n                                <Icon type=\"upload\" /> Click to upload\n                            </Button>\n                        </Upload>                    \n                    </Form.Item>\n                    <Form.Item>\n                        <Button htmlType=\"submit\">Create</Button>\n                    </Form.Item>\n                </Form>            \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ( state ) => {\n    return {\n        loading: state.model.create.loading,\n        createdModel: state.model.create.createdModel,\n        error: state.model.create.error\n    }\n}\n\nconst mapDispatchToProps = ( dispatch ) => {\n    return {\n        create: ( model ) => dispatch(modelActions.createRequest(model)),\n        clearCreate: () => dispatch(modelActions.clearCreate())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create({ name: 'model_form' })(ModelForm))","import React from 'react'\n\nconst NoMatchPage = () => {\n  return (\n    <h3>404 - Not found</h3>\n  );\n};\n\nexport default NoMatchPage","import React from 'react'\nimport { connect } from \"react-redux\";\nimport { Route, Switch, Link } from 'react-router-dom';\nimport { Row, Col, Button, Card, Typography } from 'antd'\n\nimport { userActions } from '../../state/duck/user'\nimport { Spinner, Modal } from './components'\nimport { userManagementRoutes } from '../../routes/'\n\nconst { Title } = Typography\nclass AllUserPage extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount(props) {\n        this.props.findAll()\n    }\n    \n    clearError = () => {\n        this.props.clearError()\n    }\n\n    render() {\n        const { loading, users, error } = this.props\n        console.log(users)\n        return (\n            <div style={{ background: '#ECECEC', padding: '30px', 'wordWrap': 'normal'}}>\n                <Switch>\n                    {\n                        userManagementRoutes.map(route => (\n                            <Route key={ route.path } { ...route } />\n                        ))\n                    }\n                    <Route exact path=\"/users\">\n                        <Spinner visible={loading} title={ \"Finding useres\" } />\n                        <Modal \n                            title={ \"Find error\" }\n                            visible={error != null} \n                            content={error || \"\"} \n                            handleOk={this.clearError} \n                            handleCancel={this.clearError} \n                        />\n                        <Row>                        \n                            <Col span={12}><h2>Users</h2></Col>\n                            <Col span={12} align={\"right\"}><Button><Link to=\"/useres/create\">New</Link></Button></Col>\n                        </Row>\n                        <Row>\n                            {\n                                    (users.length == 0) ? <div>No users found</div> :\n                                    makeCardData(users, 2).map((r, id) => {\n                                        return (\n                                            <Row  key={id} gutter={16} style={{\"marginBottom\": \"10px\"}}>\n                                                {\n                                                    r.map((c) => {\n                                                        return (\n                                                            <Col key={c._id} span={12}>\n                                                                {\n                                                                    <Link to={`/users/${c._id}`}>\n                                                                            <Card hoverable title={c.username} bordered={false}>\n                                                                                <p className=\"truncate\">\n                                                                                    <b>Email:</b> {c.email}\n                                                                                </p>\n                                                                                <p>\n                                                                                    <b>First name:</b> {c.firstname}\n                                                                                </p>\n                                                                                <p>\n                                                                                    <b>Last name:</b> {c.lastname}\n                                                                                </p>\n                                                                            </Card>\n                                                                    </Link>\n                                                                }\n                                                            </Col>\n                                                        )\n                                                    })\n                                                }\n                                            </Row>\n                                        )\n                                    })\n                            }\n                        </Row>\n                    </Route>\n                </Switch>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ( state, ownProps ) => {\n    return {\n        loading: state.user.find.loading,\n        users: state.user.find.users,\n        error: state.user.find.error\n    }\n}\n\nconst mapDispatchToProps = ( dispatch ) => ( {\n    findAll: () => dispatch(userActions.findAllRequest()),\n    clearError: () => dispatch(userActions.clearFindError())\n} )\n\nconst makeCardData = (users, numRows) => {\n    let cardRows = [];\n    let currentRow = [users[0]];\n    for (let i = 1; i < users.length; i++) {\n        currentRow.push(users[i])\n\n        if ((i+1) % numRows == 0) {\n            cardRows.push(currentRow)\n            currentRow = []\n        }\n\n    }\n    cardRows.push(currentRow)\n\n    return cardRows\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllUserPage)\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Switch, Route } from 'react-router-dom'\nimport { Form, Button, Input } from 'antd'\n\nimport { FileTable, Spinner, Modal } from './components'\nimport { userActions } from '../../state/duck/user';\n\nclass UserDetail extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        const { match: { params } } = this.props;\n        this.props.findByIdRequest(params.userId)\n    }\n\n    clearError = () => {\n        if (this.props.findError) this.props.clearFindError()\n    }\n    \n\n    render() {\n        const { loading, currentUser, findError } = this.props\n        const { getFieldDecorator } = this.props.form\n        \n        return (\n            <div>\n                <Spinner visible={loading} title={ \"Finding users\" } />\n                <Modal \n                    title={ \"Something went wrong\" }\n                    visible={findError != null} \n                    content={findError} \n                    handleOk={this.clearError} \n                    handleCancel={this.clearError} \n                />\n                {\n                    (currentUser) ? (\n                        <Form onSubmit={() => {}} className={\"center-form\"}>\n                            <Form.Item label=\"User name\">\n                                <Input value={currentUser.username} disabled={true}/>\n                            </Form.Item>\n                            <Form.Item label=\"Email\">\n                                <Input value={currentUser.email} disabled={true}/>\n                            </Form.Item>\n                            <Form.Item label=\"First name\">\n                                <Input value={currentUser.firstname} disabled={true}/>\n                            </Form.Item>\n                            <Form.Item label=\"Last name\">\n                                <Input value={currentUser.lastname} disabled={true}/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button>Edit</Button>\n                                <Button>Delete</Button>\n                            </Form.Item>\n                        </Form>            \n\n                    ) : (\n                        <div></div>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ( state ) => {\n    console.log(state.user)\n    return {\n        loading: state.user.find.loading,\n        findError: state.user.find.error,\n        currentUser: state.user.find.currentUser,\n    }\n}\n\nconst mapDispatchToProps = ( dispatch ) => ({\n    findByIdRequest: ( id ) => dispatch(userActions.findByIdRequest(id)),\n    clearFindError: () => dispatch(userActions.clearFindError()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create({ name: 'user_detail_form' })(UserDetail))","import { Redirect } from 'react-router-dom'\nimport { Login, Register, Home, Project, Algorithm, \n        AccountDetail, NoMatch, ProjectForm, ProjectDetail,\n        FileDetail, Model, ModelForm, ModelDetail, UserDetail, User } from '../views/pages';\nimport { withAuthentication } from '../views/enhancers'\n\n\nconst generalRoutes = [\n    {\n        path: \"/login\",\n        component: Login,\n        exact: true\n    },\n    {\n        path: \"/register\",\n        component: Register,\n        exact: true\n    },\n    {\n        path: \"/\",\n        component: withAuthentication(Home)    \n    },\n]\n\nconst userRouters = [\n    {\n        path: \"/projects\",\n        component: Project,\n        name: \"Project\",\n        icon: \"github\",\n        default: true,\n    },\n    {\n        path: \"/detail\",\n        component: AccountDetail,\n        name: \"Account\",\n        icon: \"user\"\n    },\n    {\n        path: \"*\",\n        component: NoMatch,\n    },\n]\n\n\nconst projectRoutes = [\n    {\n        path: \"/projects/create\",\n        component: ProjectForm,\n    },\n    {\n        path: \"/projects/:projectId/files\",\n        component: ProjectDetail,\n        exact: true,\n    },\n    {\n        path: \"/projects/:projectId/files/:fileId\",\n        component: FileDetail,\n    },\n]\n\nconst userManagementRoutes = [\n    {\n        path: \"/users/:userId\",\n        component: UserDetail,\n    },\n]\n\nconst adminRoutes = [\n    {\n        path: \"/models\",\n        component: Model,\n        name: \"Algorithm\",\n        icon: \"codepen\",\n        default: true\n    },\n    {\n        path: \"/users\",\n        component: User,\n        name: \"Useres\",\n        icon: \"qq\",\n        default: true\n    },\n\n    {\n        path: \"/detail\",\n        component: AccountDetail,\n        name: \"Account\",\n        icon: \"user\"\n    },\n    {\n        path: \"*\",\n        component: NoMatch,\n    },\n]\n\nconst modelRoutes = [\n    {\n        path: \"/models/create\",\n        component: ModelForm,\n    },\n    {\n        path: \"/models/:modelId\",\n        component: ModelDetail,\n    },\n\n]\n\nexport {\n    generalRoutes,\n    userRouters,\n    projectRoutes,\n    adminRoutes,\n    modelRoutes,\n    userManagementRoutes\n}","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { getToken } from '../../state/utils/token'\n\n\nexport default function withAuthentication( WrappedComponent ) {\n    const wrappedAuthentication = ( props ) => {\n        const accessToken = getToken()\n        if (!accessToken) {\n            return <Redirect to=\"/login\" />\n        }\n        return ( <WrappedComponent { ...props } accessToken={accessToken} /> ) \n    }\n\n    return wrappedAuthentication\n}\n","import React from 'react';\nimport { Layout } from 'antd'\nimport { Link, Route } from 'react-router-dom';\nimport { generalRoutes } from '../../routes'\n\nconst  { Header, Content, Footer } = Layout\nconst App = ( ) => (\n    <Layout>\n        <Content>\n            { generalRoutes.map( route => (\n                <Route key={ route.path } { ...route } />\n            ) ) }\n        </Content>\n    </Layout>\n)\n\nexport default App","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Layout, Menu, Icon } from 'antd'\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { loginActions } from '../../state/duck/login';\n\nconst { Header, Sider, Content } = Layout;\n\nclass BackboneLayout extends React.Component {\n    static propTypes = {\n        siders: PropTypes.array.isRequired,\n        content: PropTypes.any,\n        header: PropTypes.any\n    }\n\n    state = {\n        siders: this.props.siders,\n        content: this.props.content,\n        collapsed: true\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.siders != this.props.siders || prevProps.content != this.props.content) {\n\n            this.setState({\n                ...this.state,\n                siders: this.props.siders,\n                content: this.props.content\n            })\n        }\n    }\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        })\n    }\n\n    logout = () => {\n        this.props.logout()\n        this.props.history.push(\"/login\")\n    }\n\n    render() {\n        const {pathname} = this.props.location;\n        const { siders, content, collapsed } = this.state\n\n        const defaultKeys = siders.filter((i) => i.path == pathname).map(i => i.key)\n\n        return (\n            <Layout className=\"container\">\n                <Sider trigger={null} collapsible collapsed={collapsed}>\n                    <div className=\"logo\"></div>\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={defaultKeys}>\n                        {siders.map((item) => (\n                            <Menu.Item key={item.key}>\n                                <Link to={item.path}>\n                                    <Icon type={item.icon} />\n                                    <span>{item.name}</span>\n                                </Link>\n                            </Menu.Item>\n                        ))}\n                    </Menu>\n                </Sider>\n                <Layout>\n                    <Header style={{ background: \"#fff\", padding: 0 }}>\n                        <Icon \n                            className=\"trigger\"\n                            type={this.state.collapsed ? \"menu-unfold\" : \"menu-fold\"}\n                            onClick={this.toggle} \n                        />\n                        <span\n                            className=\"trigger\" \n                            style={{ float: \"right\", fontSize: 14 }}\n                            onClick={this.logout}\n                            >\n                                Logout\n                        </span>\n                    </Header>\n                    <Content \n                        style={{\n                            margin: '24px 16px',\n                            padding: 24,\n                            background: '#fff',\n                            minHeight: 280,\n                        }}>\n                            {content}\n                    </Content>\n                </Layout>\n            </Layout>\n        )\n    }\n}\n\nconst mapDispatchToProps = ( dispatch ) => ({\n    logout: () => dispatch(loginActions.logout())\n})\n\nexport default connect(null, mapDispatchToProps)(withRouter(props => <BackboneLayout {...props} />))","import React from 'react'\nimport { Route, Redirect, Switch } from 'react-router-dom';\n\nimport { userRouters } from '../../routes'\nimport BackboneLayout from './backbone'\n\nconst UserLayout = ( ) => {\n    const defaultComponent = userRouters.find(( el ) => {\n        return el.default\n    })\n\n    const routes = [{\n        path: \"/\",\n        component: () => (<Redirect to={defaultComponent.path}/>),\n        exact: true\n    }, ...userRouters]\n    \n    const content =  (\n        <Switch>\n            {\n                routes.map(( route ) => (\n                    <Route key={route.path} {...route} />\n                ))\n            }\n        </Switch>\n    )    \n\n    const siders = userRouters.filter(i => !(i.path) || i.path != \"*\").map((route, i) => {\n        return {\n            key: i.toString(),\n            icon: route.icon,\n            name: route.name,\n            path: route.path\n        }\n    })\n\n    return (<BackboneLayout content={content} siders={siders}/>)\n}\n\nexport default UserLayout","import React from 'react'\nimport { Route, Redirect, Switch } from 'react-router-dom';\n\nimport { adminRoutes } from '../../routes'\nimport BackboneLayout from './backbone'\n\nconst AdminLayout = ( ) => {\n    const defaultComponent = adminRoutes.find(( el ) => {\n        return el.default\n    })\n\n    const routes = [{\n        path: \"/\",\n        component: () => (<Redirect to={defaultComponent.path}/>),\n        exact: true,\n    }, ...adminRoutes,]\n    \n    const content =  (\n        <Switch>\n            {\n                routes.map(( route ) => (\n                    <Route key={route.path} {...route} />\n                ))\n            }\n        </Switch>\n    )    \n\n    const siders = adminRoutes.filter(i => !(i.path) || i.path != \"*\").map((route, i) => {\n        return {\n            key: i.toString(),\n            icon: route.icon,\n            name: route.name,\n            path: route.path\n        }\n    })\n\n    return <BackboneLayout content={content} siders={siders}/>\n}\n\nexport default AdminLayout","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport createSagaMiddleware from 'redux-saga'\n\nimport * as reducers from './duck'\nimport { runSagas } from './sagas'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nexport default function configureStore( initialState ) {\n    const rootReducer = combineReducers( reducers );\n\n    const store = createStore(\n        rootReducer,\n        applyMiddleware( sagaMiddleware )\n    )\n\n    runSagas(sagaMiddleware);\n\n    return store\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider as ReduxProvider } from \"react-redux\";\n\nimport './index.css';\nimport { General } from './views/layouts';\nimport configureStore from './state/store'\n\nimport * as serviceWorker from './serviceWorker';\n\n\nconst rootStore = configureStore({})\nconst RootHtml = ( ) => (\n    <ReduxProvider store={ rootStore }>\n        <Router>\n            <General />\n        </Router>\n    </ReduxProvider>\n);\n\n\nReactDOM.render(<RootHtml />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { loginOperations as loginSagas } from './duck/login';\nimport { registerOperations as registerSagas } from './duck/register';\nimport { projectOperations as projectSaga } from './duck/project'\nimport { fileOperations as fileSaga } from './duck/file'\nimport { modelOperations as modelSaga } from './duck/model'\nimport { userOperations as userSaga } from './duck/user'\n\nconst runSagas = (sagaMiddleware) => {\n    sagaMiddleware.run(loginSagas)\n    sagaMiddleware.run(registerSagas)\n    sagaMiddleware.run(projectSaga)\n    sagaMiddleware.run(fileSaga)\n    sagaMiddleware.run(modelSaga)\n    sagaMiddleware.run(userSaga)\n}\n\nexport {\n    runSagas\n}"],"sourceRoot":""}